/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.api;

import com.zashigaofa.client.ApiException;
import com.zashigaofa.client.model.BooleanApiResponse;
import com.zashigaofa.client.model.ObjectApiResponse;
import com.zashigaofa.client.model.ObjectListApiResponse;
import java.time.OffsetDateTime;
import com.zashigaofa.client.model.StorageListResultApiResponse;
import com.zashigaofa.client.model.StringApiResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for StorageApi
 */
@Disabled
public class StorageApiTest {

    private final StorageApi api = new StorageApi();

    
    /**
     * 聚合查询
     *
     * 根据聚合管道查询指定表中的数据
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void storageAggregateTest() throws ApiException {
        String table = null;
        String appKey = null;
        String pipeline = null;
        ObjectListApiResponse response = 
        api.storageAggregate(table, appKey, pipeline);
        
        // TODO: test validations
    }
    
    /**
     * 删除数据
     *
     * 删除指定表中指定ID的数据
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void storageDeleteTest() throws ApiException {
        String table = null;
        String id = null;
        String appKey = null;
        BooleanApiResponse response = 
        api.storageDelete(table, id, appKey);
        
        // TODO: test validations
    }
    
    /**
     * 数据详情
     *
     * 获取指定表中指定ID的数据详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void storageDetailTest() throws ApiException {
        String table = null;
        String id = null;
        String appKey = null;
        String project = null;
        ObjectApiResponse response = 
        api.storageDetail(table, id, appKey, project);
        
        // TODO: test validations
    }
    
    /**
     * 查询数据
     *
     * 根据条件查询指定表中的数据
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void storageListTest() throws ApiException {
        String table = null;
        String appKey = null;
        String filter = null;
        String project = null;
        String sort = null;
        OffsetDateTime startTime = null;
        OffsetDateTime endTime = null;
        Boolean explain = null;
        Integer take = null;
        Integer skip = null;
        StorageListResultApiResponse response = 
        api.storageList(table, appKey, filter, project, sort, startTime, endTime, explain, take, skip);
        
        // TODO: test validations
    }
    
    /**
     * 添加数据
     *
     * 向指定表中添加数据，可以是单个json对象或json数组
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void storagePostTest() throws ApiException {
        String table = null;
        String appKey = null;
        List<Object> requestBody = null;
        StringApiResponse response = 
        api.storagePost(table, appKey, requestBody);
        
        // TODO: test validations
    }
    
    /**
     * 更新数据
     *
     * 更新指定表中指定ID的数据，可以选择全量更新或部分更新
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void storagePutTest() throws ApiException {
        String table = null;
        String id = null;
        String appKey = null;
        List<Object> requestBody = null;
        Boolean replace = null;
        BooleanApiResponse response = 
        api.storagePut(table, id, appKey, requestBody, replace);
        
        // TODO: test validations
    }
    
}
