/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.api;

import com.zashigaofa.client.ApiException;
import com.zashigaofa.client.model.BooleanApiResponse;
import com.zashigaofa.client.model.FollowerPutModel;
import com.zashigaofa.client.model.GetUserProfileResultApiResponse;
import com.zashigaofa.client.model.UserCommonInterestsResultApiResponse;
import com.zashigaofa.client.model.UserFollowersResultApiResponse;
import com.zashigaofa.client.model.UserFriendsNearByResultApiResponse;
import com.zashigaofa.client.model.UserMutualFollowersResultApiResponse;
import com.zashigaofa.client.model.UserMutualFollowingsResultApiResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for UserFriendsApi
 */
@Disabled
public class UserFriendsApiTest {

    private final UserFriendsApi api = new UserFriendsApi();

    
    /**
     * 推荐相似兴趣用户
     *
     * 推荐有共同爱好的用户
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userCommonInterestsTest() throws ApiException {
        String appKey = null;
        String tag = null;
        Integer skip = null;
        Integer take = null;
        UserCommonInterestsResultApiResponse response = 
        api.userCommonInterests(appKey, tag, skip, take);
        
        // TODO: test validations
    }
    
    /**
     * 添加关注
     *
     * 关注指定用户
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userFollowUserTest() throws ApiException {
        Long userId = null;
        String appKey = null;
        BooleanApiResponse response = 
        api.userFollowUser(userId, appKey);
        
        // TODO: test validations
    }
    
    /**
     * 刷新粉丝数据
     *
     * 根据粉丝ID更新粉丝信息
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userFollowerPutTest() throws ApiException {
        Long id = null;
        String appKey = null;
        FollowerPutModel followerPutModel = null;
        BooleanApiResponse response = 
        api.userFollowerPut(id, appKey, followerPutModel);
        
        // TODO: test validations
    }
    
    /**
     * 获取粉丝列表
     *
     * 根据条件获取我的粉丝列表
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userFollowersTest() throws ApiException {
        String appKey = null;
        String tag = null;
        String status = null;
        Long targetUserId = null;
        Integer skip = null;
        Integer take = null;
        UserFollowersResultApiResponse response = 
        api.userFollowers(appKey, tag, status, targetUserId, skip, take);
        
        // TODO: test validations
    }
    
    /**
     * 获取关注列表 / 判断是否关注
     *
     * 根据条件获取我的关注列表，或判断是否关注某个用户
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userFollowingTest() throws ApiException {
        String appKey = null;
        String tag = null;
        String status = null;
        Long targetUserId = null;
        Integer skip = null;
        Integer take = null;
        Long checkUserId = null;
        Boolean onlyIDs = null;
        BooleanApiResponse response = 
        api.userFollowing(appKey, tag, status, targetUserId, skip, take, checkUserId, onlyIDs);
        
        // TODO: test validations
    }
    
    /**
     * 推荐附近用户
     *
     * 根据地理位置坐标和多种筛选条件，查询附近满足条件的用户列表，支持分页和按距离排序。 地理位置查询使用MySQL的ST_Distance_Sphere函数计算球面距离。 注意：longitude为经度(X轴)，latitude为纬度(Y轴)，参数顺序与常规坐标系一致
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userFriendsNearByTest() throws ApiException {
        Double longitude = null;
        Double latitude = null;
        String appKey = null;
        String country = null;
        String state = null;
        String city = null;
        String district = null;
        String gender = null;
        Integer ageS = null;
        Integer ageE = null;
        String tag = null;
        Long distance = null;
        Integer skip = null;
        Integer take = null;
        UserFriendsNearByResultApiResponse response = 
        api.userFriendsNearBy(longitude, latitude, appKey, country, state, city, district, gender, ageS, ageE, tag, distance, skip, take);
        
        // TODO: test validations
    }
    
    /**
     * 推荐共同粉丝用户
     *
     * 推荐有共同粉丝的用户
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userMutualFollowersTest() throws ApiException {
        String appKey = null;
        Integer skip = null;
        Integer take = null;
        UserMutualFollowersResultApiResponse response = 
        api.userMutualFollowers(appKey, skip, take);
        
        // TODO: test validations
    }
    
    /**
     * 推荐共同关注用户
     *
     * 推荐有共同关注的用户
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userMutualFollowingsTest() throws ApiException {
        String appKey = null;
        Integer skip = null;
        Integer take = null;
        UserMutualFollowingsResultApiResponse response = 
        api.userMutualFollowings(appKey, skip, take);
        
        // TODO: test validations
    }
    
    /**
     * 获取用户资料
     *
     * 用于他人主页展示
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userProfileByIdTest() throws ApiException {
        Long userId = null;
        String appKey = null;
        GetUserProfileResultApiResponse response = 
        api.userProfileById(userId, appKey);
        
        // TODO: test validations
    }
    
    /**
     * 取消关注
     *
     * 取消关注指定用户
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void userUnfollowUserTest() throws ApiException {
        Long userId = null;
        String appKey = null;
        BooleanApiResponse response = 
        api.userUnfollowUser(userId, appKey);
        
        // TODO: test validations
    }
    
}
