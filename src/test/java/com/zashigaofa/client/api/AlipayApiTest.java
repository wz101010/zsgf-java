/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.api;

import com.zashigaofa.client.ApiException;
import com.zashigaofa.client.model.AlipayCreateOrderPagePayRequest;
import com.zashigaofa.client.model.AlipayCreateOrderRequest;
import com.zashigaofa.client.model.AlipayCreateOrderWapPayRequest;
import com.zashigaofa.client.model.AlipayTradeQueryResponseApiResponse;
import com.zashigaofa.client.model.AlipayTradeRefundResponseApiResponse;
import com.zashigaofa.client.model.BooleanApiResponse;
import com.zashigaofa.client.model.ReturnPageNotifyRequest;
import com.zashigaofa.client.model.StringApiResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for AlipayApi
 */
@Disabled
public class AlipayApiTest {

    private final AlipayApi api = new AlipayApi();

    
    /**
     * 创建当面付订单
     *
     * 创建一个当面付订单，并返回支付二维码。
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void alipayCreateOrderTest() throws ApiException {
        String appKey = null;
        AlipayCreateOrderRequest alipayCreateOrderRequest = null;
        StringApiResponse response = 
        api.alipayCreateOrder(appKey, alipayCreateOrderRequest);
        
        // TODO: test validations
    }
    
    /**
     * 创建PC支付订单
     *
     * 创建一个PC支付订单，并返回支付页面。
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void alipayCreateOrderPagePayTest() throws ApiException {
        String appKey = null;
        AlipayCreateOrderPagePayRequest alipayCreateOrderPagePayRequest = null;
        StringApiResponse response = 
        api.alipayCreateOrderPagePay(appKey, alipayCreateOrderPagePayRequest);
        
        // TODO: test validations
    }
    
    /**
     * 创建WAP支付订单
     *
     * 创建一个WAP支付订单，并返回支付页面。
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void alipayCreateOrderWapPayTest() throws ApiException {
        String appKey = null;
        AlipayCreateOrderWapPayRequest alipayCreateOrderWapPayRequest = null;
        StringApiResponse response = 
        api.alipayCreateOrderWapPay(appKey, alipayCreateOrderWapPayRequest);
        
        // TODO: test validations
    }
    
    /**
     * 获取订单详情
     *
     * 查询订单详情，包括订单状态和支付信息。
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void alipayOrderDetailTest() throws ApiException {
        String appKey = null;
        String orderNo = null;
        AlipayTradeQueryResponseApiResponse response = 
        api.alipayOrderDetail(appKey, orderNo);
        
        // TODO: test validations
    }
    
    /**
     * 发起订单退款
     *
     * 对指定订单进行退款操作。
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void alipayOrderRefundTest() throws ApiException {
        String appKey = null;
        String amount = null;
        String orderNo = null;
        AlipayTradeRefundResponseApiResponse response = 
        api.alipayOrderRefund(appKey, amount, orderNo);
        
        // TODO: test validations
    }
    
    /**
     * 支付成功回调通知
     *
     * 处理支付宝支付成功的同步通知。
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void alipayReturnPageNotifyTest() throws ApiException {
        String appKey = null;
        ReturnPageNotifyRequest returnPageNotifyRequest = null;
        BooleanApiResponse response = 
        api.alipayReturnPageNotify(appKey, returnPageNotifyRequest);
        
        // TODO: test validations
    }
    
}
