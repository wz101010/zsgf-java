/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * 订单实体，用于记录用户的订单信息。
 */
@JsonPropertyOrder({
  Order.JSON_PROPERTY_ID,
  Order.JSON_PROPERTY_USER_I_D,
  Order.JSON_PROPERTY_PAY_TYPE,
  Order.JSON_PROPERTY_AMOUNT,
  Order.JSON_PROPERTY_ORDER_NO,
  Order.JSON_PROPERTY_TRADE_NO,
  Order.JSON_PROPERTY_STATUS,
  Order.JSON_PROPERTY_PRODUCT_TYPE,
  Order.JSON_PROPERTY_PRODUCT_I_D,
  Order.JSON_PROPERTY_PRODUCT_NAME,
  Order.JSON_PROPERTY_ALLOW_REFUND,
  Order.JSON_PROPERTY_ALLOW_REFUND_UNTIL,
  Order.JSON_PROPERTY_TAGS,
  Order.JSON_PROPERTY_REMARK,
  Order.JSON_PROPERTY_DESCRIPTION,
  Order.JSON_PROPERTY_ORDER_PAY_TIME,
  Order.JSON_PROPERTY_EXPIRE_TIME,
  Order.JSON_PROPERTY_CREATE_DATE,
  Order.JSON_PROPERTY_LAST_UPDATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class Order {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private Long id;

  public static final String JSON_PROPERTY_USER_I_D = "userID";
  @javax.annotation.Nullable
  private Long userID;

  public static final String JSON_PROPERTY_PAY_TYPE = "payType";
  private JsonNullable<String> payType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nullable
  private Double amount;

  public static final String JSON_PROPERTY_ORDER_NO = "orderNo";
  private JsonNullable<String> orderNo = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TRADE_NO = "tradeNo";
  private JsonNullable<String> tradeNo = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATUS = "status";
  private JsonNullable<String> status = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRODUCT_TYPE = "productType";
  private JsonNullable<String> productType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRODUCT_I_D = "productID";
  private JsonNullable<String> productID = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRODUCT_NAME = "productName";
  private JsonNullable<String> productName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ALLOW_REFUND = "allowRefund";
  @javax.annotation.Nullable
  private Boolean allowRefund;

  public static final String JSON_PROPERTY_ALLOW_REFUND_UNTIL = "allowRefundUntil";
  @javax.annotation.Nullable
  private OffsetDateTime allowRefundUntil;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private JsonNullable<String> tags = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REMARK = "remark";
  private JsonNullable<String> remark = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ORDER_PAY_TIME = "orderPayTime";
  @javax.annotation.Nullable
  private OffsetDateTime orderPayTime;

  public static final String JSON_PROPERTY_EXPIRE_TIME = "expireTime";
  @javax.annotation.Nullable
  private OffsetDateTime expireTime;

  public static final String JSON_PROPERTY_CREATE_DATE = "createDate";
  @javax.annotation.Nullable
  private OffsetDateTime createDate;

  public static final String JSON_PROPERTY_LAST_UPDATE = "lastUpdate";
  @javax.annotation.Nullable
  private OffsetDateTime lastUpdate;

  public Order() { 
  }

  public Order id(@javax.annotation.Nullable Long id) {
    this.id = id;
    return this;
  }

  /**
   * 订单的唯一标识符。
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable Long id) {
    this.id = id;
  }


  public Order userID(@javax.annotation.Nullable Long userID) {
    this.userID = userID;
    return this;
  }

  /**
   * 创建订单的用户ID。
   * @return userID
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getUserID() {
    return userID;
  }


  @JsonProperty(JSON_PROPERTY_USER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserID(@javax.annotation.Nullable Long userID) {
    this.userID = userID;
  }


  public Order payType(@javax.annotation.Nullable String payType) {
    this.payType = JsonNullable.<String>of(payType);
    return this;
  }

  /**
   * 订单的支付类型，例如 &#39;信用卡&#39;, &#39;支付宝&#39;, &#39;微信支付&#39; 等。
   * @return payType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPayType() {
        return payType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPayType_JsonNullable() {
    return payType;
  }
  
  @JsonProperty(JSON_PROPERTY_PAY_TYPE)
  public void setPayType_JsonNullable(JsonNullable<String> payType) {
    this.payType = payType;
  }

  public void setPayType(@javax.annotation.Nullable String payType) {
    this.payType = JsonNullable.<String>of(payType);
  }


  public Order amount(@javax.annotation.Nullable Double amount) {
    this.amount = amount;
    return this;
  }

  /**
   * 订单的总金额。
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Double getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(@javax.annotation.Nullable Double amount) {
    this.amount = amount;
  }


  public Order orderNo(@javax.annotation.Nullable String orderNo) {
    this.orderNo = JsonNullable.<String>of(orderNo);
    return this;
  }

  /**
   * 订单的唯一编号，通常由系统生成。
   * @return orderNo
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getOrderNo() {
        return orderNo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORDER_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOrderNo_JsonNullable() {
    return orderNo;
  }
  
  @JsonProperty(JSON_PROPERTY_ORDER_NO)
  public void setOrderNo_JsonNullable(JsonNullable<String> orderNo) {
    this.orderNo = orderNo;
  }

  public void setOrderNo(@javax.annotation.Nullable String orderNo) {
    this.orderNo = JsonNullable.<String>of(orderNo);
  }


  public Order tradeNo(@javax.annotation.Nullable String tradeNo) {
    this.tradeNo = JsonNullable.<String>of(tradeNo);
    return this;
  }

  /**
   * 与订单关联的交易编号，通常由支付平台提供。
   * @return tradeNo
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTradeNo() {
        return tradeNo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRADE_NO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTradeNo_JsonNullable() {
    return tradeNo;
  }
  
  @JsonProperty(JSON_PROPERTY_TRADE_NO)
  public void setTradeNo_JsonNullable(JsonNullable<String> tradeNo) {
    this.tradeNo = tradeNo;
  }

  public void setTradeNo(@javax.annotation.Nullable String tradeNo) {
    this.tradeNo = JsonNullable.<String>of(tradeNo);
  }


  public Order status(@javax.annotation.Nullable String status) {
    this.status = JsonNullable.<String>of(status);
    return this;
  }

  /**
   * 订单的当前状态，例如 &#39;待支付&#39;, &#39;已完成&#39;, &#39;已取消&#39; 等。
   * @return status
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getStatus() {
        return status.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStatus_JsonNullable() {
    return status;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS)
  public void setStatus_JsonNullable(JsonNullable<String> status) {
    this.status = status;
  }

  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = JsonNullable.<String>of(status);
  }


  public Order productType(@javax.annotation.Nullable String productType) {
    this.productType = JsonNullable.<String>of(productType);
    return this;
  }

  /**
   * 订单中商品的类型分类。
   * @return productType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getProductType() {
        return productType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProductType_JsonNullable() {
    return productType;
  }
  
  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  public void setProductType_JsonNullable(JsonNullable<String> productType) {
    this.productType = productType;
  }

  public void setProductType(@javax.annotation.Nullable String productType) {
    this.productType = JsonNullable.<String>of(productType);
  }


  public Order productID(@javax.annotation.Nullable String productID) {
    this.productID = JsonNullable.<String>of(productID);
    return this;
  }

  /**
   * 订单中商品的唯一标识符。
   * @return productID
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getProductID() {
        return productID.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRODUCT_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProductID_JsonNullable() {
    return productID;
  }
  
  @JsonProperty(JSON_PROPERTY_PRODUCT_I_D)
  public void setProductID_JsonNullable(JsonNullable<String> productID) {
    this.productID = productID;
  }

  public void setProductID(@javax.annotation.Nullable String productID) {
    this.productID = JsonNullable.<String>of(productID);
  }


  public Order productName(@javax.annotation.Nullable String productName) {
    this.productName = JsonNullable.<String>of(productName);
    return this;
  }

  /**
   * 订单中商品的名称。
   * @return productName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getProductName() {
        return productName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProductName_JsonNullable() {
    return productName;
  }
  
  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  public void setProductName_JsonNullable(JsonNullable<String> productName) {
    this.productName = productName;
  }

  public void setProductName(@javax.annotation.Nullable String productName) {
    this.productName = JsonNullable.<String>of(productName);
  }


  public Order allowRefund(@javax.annotation.Nullable Boolean allowRefund) {
    this.allowRefund = allowRefund;
    return this;
  }

  /**
   * 指示订单是否允许进行退款操作。
   * @return allowRefund
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_REFUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAllowRefund() {
    return allowRefund;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_REFUND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowRefund(@javax.annotation.Nullable Boolean allowRefund) {
    this.allowRefund = allowRefund;
  }


  public Order allowRefundUntil(@javax.annotation.Nullable OffsetDateTime allowRefundUntil) {
    this.allowRefundUntil = allowRefundUntil;
    return this;
  }

  /**
   * 订单允许进行退款操作的截止时间。
   * @return allowRefundUntil
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALLOW_REFUND_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getAllowRefundUntil() {
    return allowRefundUntil;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_REFUND_UNTIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowRefundUntil(@javax.annotation.Nullable OffsetDateTime allowRefundUntil) {
    this.allowRefundUntil = allowRefundUntil;
  }


  public Order tags(@javax.annotation.Nullable String tags) {
    this.tags = JsonNullable.<String>of(tags);
    return this;
  }

  /**
   * 用于分类或标记订单的标签。
   * @return tags
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTags() {
        return tags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTags_JsonNullable() {
    return tags;
  }
  
  @JsonProperty(JSON_PROPERTY_TAGS)
  public void setTags_JsonNullable(JsonNullable<String> tags) {
    this.tags = tags;
  }

  public void setTags(@javax.annotation.Nullable String tags) {
    this.tags = JsonNullable.<String>of(tags);
  }


  public Order remark(@javax.annotation.Nullable String remark) {
    this.remark = JsonNullable.<String>of(remark);
    return this;
  }

  /**
   * 订单的额外备注信息。
   * @return remark
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getRemark() {
        return remark.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRemark_JsonNullable() {
    return remark;
  }
  
  @JsonProperty(JSON_PROPERTY_REMARK)
  public void setRemark_JsonNullable(JsonNullable<String> remark) {
    this.remark = remark;
  }

  public void setRemark(@javax.annotation.Nullable String remark) {
    this.remark = JsonNullable.<String>of(remark);
  }


  public Order description(@javax.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

  /**
   * 订单的详细描述信息。
   * @return description
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public Order orderPayTime(@javax.annotation.Nullable OffsetDateTime orderPayTime) {
    this.orderPayTime = orderPayTime;
    return this;
  }

  /**
   * 订单完成支付的时间。
   * @return orderPayTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER_PAY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getOrderPayTime() {
    return orderPayTime;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_PAY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderPayTime(@javax.annotation.Nullable OffsetDateTime orderPayTime) {
    this.orderPayTime = orderPayTime;
  }


  public Order expireTime(@javax.annotation.Nullable OffsetDateTime expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * 订单的过期时间，超过该时间订单将自动取消。
   * @return expireTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getExpireTime() {
    return expireTime;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpireTime(@javax.annotation.Nullable OffsetDateTime expireTime) {
    this.expireTime = expireTime;
  }


  public Order createDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * 订单的创建时间，默认为当前时间。
   * @return createDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getCreateDate() {
    return createDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
  }


  public Order lastUpdate(@javax.annotation.Nullable OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
    return this;
  }

  /**
   * 订单的最后更新时间，默认为当前时间。
   * @return lastUpdate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdate(@javax.annotation.Nullable OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }


  /**
   * Return true if this Order object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Order order = (Order) o;
    return Objects.equals(this.id, order.id) &&
        Objects.equals(this.userID, order.userID) &&
        equalsNullable(this.payType, order.payType) &&
        Objects.equals(this.amount, order.amount) &&
        equalsNullable(this.orderNo, order.orderNo) &&
        equalsNullable(this.tradeNo, order.tradeNo) &&
        equalsNullable(this.status, order.status) &&
        equalsNullable(this.productType, order.productType) &&
        equalsNullable(this.productID, order.productID) &&
        equalsNullable(this.productName, order.productName) &&
        Objects.equals(this.allowRefund, order.allowRefund) &&
        Objects.equals(this.allowRefundUntil, order.allowRefundUntil) &&
        equalsNullable(this.tags, order.tags) &&
        equalsNullable(this.remark, order.remark) &&
        equalsNullable(this.description, order.description) &&
        Objects.equals(this.orderPayTime, order.orderPayTime) &&
        Objects.equals(this.expireTime, order.expireTime) &&
        Objects.equals(this.createDate, order.createDate) &&
        Objects.equals(this.lastUpdate, order.lastUpdate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userID, hashCodeNullable(payType), amount, hashCodeNullable(orderNo), hashCodeNullable(tradeNo), hashCodeNullable(status), hashCodeNullable(productType), hashCodeNullable(productID), hashCodeNullable(productName), allowRefund, allowRefundUntil, hashCodeNullable(tags), hashCodeNullable(remark), hashCodeNullable(description), orderPayTime, expireTime, createDate, lastUpdate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Order {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    payType: ").append(toIndentedString(payType)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    orderNo: ").append(toIndentedString(orderNo)).append("\n");
    sb.append("    tradeNo: ").append(toIndentedString(tradeNo)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    productID: ").append(toIndentedString(productID)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    allowRefund: ").append(toIndentedString(allowRefund)).append("\n");
    sb.append("    allowRefundUntil: ").append(toIndentedString(allowRefundUntil)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    orderPayTime: ").append(toIndentedString(orderPayTime)).append("\n");
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `userID` to the URL query string
    if (getUserID() != null) {
      joiner.add(String.format("%suserID%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUserID()))));
    }

    // add `payType` to the URL query string
    if (getPayType() != null) {
      joiner.add(String.format("%spayType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPayType()))));
    }

    // add `amount` to the URL query string
    if (getAmount() != null) {
      joiner.add(String.format("%samount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAmount()))));
    }

    // add `orderNo` to the URL query string
    if (getOrderNo() != null) {
      joiner.add(String.format("%sorderNo%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOrderNo()))));
    }

    // add `tradeNo` to the URL query string
    if (getTradeNo() != null) {
      joiner.add(String.format("%stradeNo%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTradeNo()))));
    }

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getStatus()))));
    }

    // add `productType` to the URL query string
    if (getProductType() != null) {
      joiner.add(String.format("%sproductType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getProductType()))));
    }

    // add `productID` to the URL query string
    if (getProductID() != null) {
      joiner.add(String.format("%sproductID%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getProductID()))));
    }

    // add `productName` to the URL query string
    if (getProductName() != null) {
      joiner.add(String.format("%sproductName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getProductName()))));
    }

    // add `allowRefund` to the URL query string
    if (getAllowRefund() != null) {
      joiner.add(String.format("%sallowRefund%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAllowRefund()))));
    }

    // add `allowRefundUntil` to the URL query string
    if (getAllowRefundUntil() != null) {
      joiner.add(String.format("%sallowRefundUntil%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAllowRefundUntil()))));
    }

    // add `tags` to the URL query string
    if (getTags() != null) {
      joiner.add(String.format("%stags%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTags()))));
    }

    // add `remark` to the URL query string
    if (getRemark() != null) {
      joiner.add(String.format("%sremark%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRemark()))));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `orderPayTime` to the URL query string
    if (getOrderPayTime() != null) {
      joiner.add(String.format("%sorderPayTime%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOrderPayTime()))));
    }

    // add `expireTime` to the URL query string
    if (getExpireTime() != null) {
      joiner.add(String.format("%sexpireTime%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExpireTime()))));
    }

    // add `createDate` to the URL query string
    if (getCreateDate() != null) {
      joiner.add(String.format("%screateDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreateDate()))));
    }

    // add `lastUpdate` to the URL query string
    if (getLastUpdate() != null) {
      joiner.add(String.format("%slastUpdate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastUpdate()))));
    }

    return joiner.toString();
  }
}

