/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * TradeFundBill
 */
@JsonPropertyOrder({
  TradeFundBill.JSON_PROPERTY_AMOUNT,
  TradeFundBill.JSON_PROPERTY_BANK_CODE,
  TradeFundBill.JSON_PROPERTY_FUND_CHANNEL,
  TradeFundBill.JSON_PROPERTY_FUND_TYPE,
  TradeFundBill.JSON_PROPERTY_REAL_AMOUNT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class TradeFundBill {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private JsonNullable<String> amount = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BANK_CODE = "bankCode";
  private JsonNullable<String> bankCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FUND_CHANNEL = "fundChannel";
  private JsonNullable<String> fundChannel = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FUND_TYPE = "fundType";
  private JsonNullable<String> fundType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REAL_AMOUNT = "realAmount";
  private JsonNullable<String> realAmount = JsonNullable.<String>undefined();

  public TradeFundBill() { 
  }

  public TradeFundBill amount(@javax.annotation.Nullable String amount) {
    this.amount = JsonNullable.<String>of(amount);
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAmount() {
        return amount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAmount_JsonNullable() {
    return amount;
  }
  
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  public void setAmount_JsonNullable(JsonNullable<String> amount) {
    this.amount = amount;
  }

  public void setAmount(@javax.annotation.Nullable String amount) {
    this.amount = JsonNullable.<String>of(amount);
  }


  public TradeFundBill bankCode(@javax.annotation.Nullable String bankCode) {
    this.bankCode = JsonNullable.<String>of(bankCode);
    return this;
  }

  /**
   * Get bankCode
   * @return bankCode
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getBankCode() {
        return bankCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBankCode_JsonNullable() {
    return bankCode;
  }
  
  @JsonProperty(JSON_PROPERTY_BANK_CODE)
  public void setBankCode_JsonNullable(JsonNullable<String> bankCode) {
    this.bankCode = bankCode;
  }

  public void setBankCode(@javax.annotation.Nullable String bankCode) {
    this.bankCode = JsonNullable.<String>of(bankCode);
  }


  public TradeFundBill fundChannel(@javax.annotation.Nullable String fundChannel) {
    this.fundChannel = JsonNullable.<String>of(fundChannel);
    return this;
  }

  /**
   * Get fundChannel
   * @return fundChannel
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFundChannel() {
        return fundChannel.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUND_CHANNEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFundChannel_JsonNullable() {
    return fundChannel;
  }
  
  @JsonProperty(JSON_PROPERTY_FUND_CHANNEL)
  public void setFundChannel_JsonNullable(JsonNullable<String> fundChannel) {
    this.fundChannel = fundChannel;
  }

  public void setFundChannel(@javax.annotation.Nullable String fundChannel) {
    this.fundChannel = JsonNullable.<String>of(fundChannel);
  }


  public TradeFundBill fundType(@javax.annotation.Nullable String fundType) {
    this.fundType = JsonNullable.<String>of(fundType);
    return this;
  }

  /**
   * Get fundType
   * @return fundType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getFundType() {
        return fundType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFundType_JsonNullable() {
    return fundType;
  }
  
  @JsonProperty(JSON_PROPERTY_FUND_TYPE)
  public void setFundType_JsonNullable(JsonNullable<String> fundType) {
    this.fundType = fundType;
  }

  public void setFundType(@javax.annotation.Nullable String fundType) {
    this.fundType = JsonNullable.<String>of(fundType);
  }


  public TradeFundBill realAmount(@javax.annotation.Nullable String realAmount) {
    this.realAmount = JsonNullable.<String>of(realAmount);
    return this;
  }

  /**
   * Get realAmount
   * @return realAmount
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getRealAmount() {
        return realAmount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRealAmount_JsonNullable() {
    return realAmount;
  }
  
  @JsonProperty(JSON_PROPERTY_REAL_AMOUNT)
  public void setRealAmount_JsonNullable(JsonNullable<String> realAmount) {
    this.realAmount = realAmount;
  }

  public void setRealAmount(@javax.annotation.Nullable String realAmount) {
    this.realAmount = JsonNullable.<String>of(realAmount);
  }


  /**
   * Return true if this TradeFundBill object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TradeFundBill tradeFundBill = (TradeFundBill) o;
    return equalsNullable(this.amount, tradeFundBill.amount) &&
        equalsNullable(this.bankCode, tradeFundBill.bankCode) &&
        equalsNullable(this.fundChannel, tradeFundBill.fundChannel) &&
        equalsNullable(this.fundType, tradeFundBill.fundType) &&
        equalsNullable(this.realAmount, tradeFundBill.realAmount);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(amount), hashCodeNullable(bankCode), hashCodeNullable(fundChannel), hashCodeNullable(fundType), hashCodeNullable(realAmount));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TradeFundBill {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    sb.append("    fundChannel: ").append(toIndentedString(fundChannel)).append("\n");
    sb.append("    fundType: ").append(toIndentedString(fundType)).append("\n");
    sb.append("    realAmount: ").append(toIndentedString(realAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `amount` to the URL query string
    if (getAmount() != null) {
      joiner.add(String.format("%samount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAmount()))));
    }

    // add `bankCode` to the URL query string
    if (getBankCode() != null) {
      joiner.add(String.format("%sbankCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getBankCode()))));
    }

    // add `fundChannel` to the URL query string
    if (getFundChannel() != null) {
      joiner.add(String.format("%sfundChannel%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFundChannel()))));
    }

    // add `fundType` to the URL query string
    if (getFundType() != null) {
      joiner.add(String.format("%sfundType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getFundType()))));
    }

    // add `realAmount` to the URL query string
    if (getRealAmount() != null) {
      joiner.add(String.format("%srealAmount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRealAmount()))));
    }

    return joiner.toString();
  }
}

