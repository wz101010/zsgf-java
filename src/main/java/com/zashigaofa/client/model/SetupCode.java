/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * SetupCode
 */
@JsonPropertyOrder({
  SetupCode.JSON_PROPERTY_ACCOUNT,
  SetupCode.JSON_PROPERTY_MANUAL_ENTRY_KEY,
  SetupCode.JSON_PROPERTY_QR_CODE_SETUP_IMAGE_URL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class SetupCode {
  public static final String JSON_PROPERTY_ACCOUNT = "account";
  private JsonNullable<String> account = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MANUAL_ENTRY_KEY = "manualEntryKey";
  private JsonNullable<String> manualEntryKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_QR_CODE_SETUP_IMAGE_URL = "qrCodeSetupImageUrl";
  private JsonNullable<String> qrCodeSetupImageUrl = JsonNullable.<String>undefined();

  public SetupCode() { 
  }

  @JsonCreator
  public SetupCode(
    @JsonProperty(JSON_PROPERTY_ACCOUNT) String account, 
    @JsonProperty(JSON_PROPERTY_MANUAL_ENTRY_KEY) String manualEntryKey, 
    @JsonProperty(JSON_PROPERTY_QR_CODE_SETUP_IMAGE_URL) String qrCodeSetupImageUrl
  ) {
  this();
    this.account = account == null ? JsonNullable.<String>undefined() : JsonNullable.of(account);
    this.manualEntryKey = manualEntryKey == null ? JsonNullable.<String>undefined() : JsonNullable.of(manualEntryKey);
    this.qrCodeSetupImageUrl = qrCodeSetupImageUrl == null ? JsonNullable.<String>undefined() : JsonNullable.of(qrCodeSetupImageUrl);
  }

  /**
   * Get account
   * @return account
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAccount() {
    
    if (account == null) {
      account = JsonNullable.<String>undefined();
    }
    return account.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAccount_JsonNullable() {
    return account;
  }
  
  @JsonProperty(JSON_PROPERTY_ACCOUNT)
  private void setAccount_JsonNullable(JsonNullable<String> account) {
    this.account = account;
  }



  /**
   * Get manualEntryKey
   * @return manualEntryKey
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getManualEntryKey() {
    
    if (manualEntryKey == null) {
      manualEntryKey = JsonNullable.<String>undefined();
    }
    return manualEntryKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MANUAL_ENTRY_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getManualEntryKey_JsonNullable() {
    return manualEntryKey;
  }
  
  @JsonProperty(JSON_PROPERTY_MANUAL_ENTRY_KEY)
  private void setManualEntryKey_JsonNullable(JsonNullable<String> manualEntryKey) {
    this.manualEntryKey = manualEntryKey;
  }



  /**
   * Get qrCodeSetupImageUrl
   * @return qrCodeSetupImageUrl
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getQrCodeSetupImageUrl() {
    
    if (qrCodeSetupImageUrl == null) {
      qrCodeSetupImageUrl = JsonNullable.<String>undefined();
    }
    return qrCodeSetupImageUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_QR_CODE_SETUP_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getQrCodeSetupImageUrl_JsonNullable() {
    return qrCodeSetupImageUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_QR_CODE_SETUP_IMAGE_URL)
  private void setQrCodeSetupImageUrl_JsonNullable(JsonNullable<String> qrCodeSetupImageUrl) {
    this.qrCodeSetupImageUrl = qrCodeSetupImageUrl;
  }



  /**
   * Return true if this SetupCode object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetupCode setupCode = (SetupCode) o;
    return equalsNullable(this.account, setupCode.account) &&
        equalsNullable(this.manualEntryKey, setupCode.manualEntryKey) &&
        equalsNullable(this.qrCodeSetupImageUrl, setupCode.qrCodeSetupImageUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(account), hashCodeNullable(manualEntryKey), hashCodeNullable(qrCodeSetupImageUrl));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetupCode {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    manualEntryKey: ").append(toIndentedString(manualEntryKey)).append("\n");
    sb.append("    qrCodeSetupImageUrl: ").append(toIndentedString(qrCodeSetupImageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `account` to the URL query string
    if (getAccount() != null) {
      joiner.add(String.format("%saccount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAccount()))));
    }

    // add `manualEntryKey` to the URL query string
    if (getManualEntryKey() != null) {
      joiner.add(String.format("%smanualEntryKey%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getManualEntryKey()))));
    }

    // add `qrCodeSetupImageUrl` to the URL query string
    if (getQrCodeSetupImageUrl() != null) {
      joiner.add(String.format("%sqrCodeSetupImageUrl%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getQrCodeSetupImageUrl()))));
    }

    return joiner.toString();
  }
}

