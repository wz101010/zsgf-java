/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * CreateOrderRequest
 */
@JsonPropertyOrder({
  CreateOrderRequest.JSON_PROPERTY_AMOUNT,
  CreateOrderRequest.JSON_PROPERTY_PRODUCT_NAME,
  CreateOrderRequest.JSON_PROPERTY_PRODUCT_TYPE,
  CreateOrderRequest.JSON_PROPERTY_PRODUCT_I_D
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class CreateOrderRequest {
  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @javax.annotation.Nonnull
  private Double amount;

  public static final String JSON_PROPERTY_PRODUCT_NAME = "productName";
  @javax.annotation.Nonnull
  private String productName;

  public static final String JSON_PROPERTY_PRODUCT_TYPE = "productType";
  @javax.annotation.Nonnull
  private String productType;

  public static final String JSON_PROPERTY_PRODUCT_I_D = "productID";
  @javax.annotation.Nonnull
  private String productID;

  public CreateOrderRequest() { 
  }

  public CreateOrderRequest amount(@javax.annotation.Nonnull Double amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * minimum: 0.01
   * @return amount
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Double getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@javax.annotation.Nonnull Double amount) {
    this.amount = amount;
  }


  public CreateOrderRequest productName(@javax.annotation.Nonnull String productName) {
    this.productName = productName;
    return this;
  }

  /**
   * Get productName
   * @return productName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getProductName() {
    return productName;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductName(@javax.annotation.Nonnull String productName) {
    this.productName = productName;
  }


  public CreateOrderRequest productType(@javax.annotation.Nonnull String productType) {
    this.productType = productType;
    return this;
  }

  /**
   * Get productType
   * @return productType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getProductType() {
    return productType;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductType(@javax.annotation.Nonnull String productType) {
    this.productType = productType;
  }


  public CreateOrderRequest productID(@javax.annotation.Nonnull String productID) {
    this.productID = productID;
    return this;
  }

  /**
   * Get productID
   * @return productID
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRODUCT_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getProductID() {
    return productID;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_I_D)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProductID(@javax.annotation.Nonnull String productID) {
    this.productID = productID;
  }


  /**
   * Return true if this CreateOrderRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateOrderRequest createOrderRequest = (CreateOrderRequest) o;
    return Objects.equals(this.amount, createOrderRequest.amount) &&
        Objects.equals(this.productName, createOrderRequest.productName) &&
        Objects.equals(this.productType, createOrderRequest.productType) &&
        Objects.equals(this.productID, createOrderRequest.productID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, productName, productType, productID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateOrderRequest {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    productID: ").append(toIndentedString(productID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `amount` to the URL query string
    if (getAmount() != null) {
      joiner.add(String.format("%samount%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAmount()))));
    }

    // add `productName` to the URL query string
    if (getProductName() != null) {
      joiner.add(String.format("%sproductName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getProductName()))));
    }

    // add `productType` to the URL query string
    if (getProductType() != null) {
      joiner.add(String.format("%sproductType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getProductType()))));
    }

    // add `productID` to the URL query string
    if (getProductID() != null) {
      joiner.add(String.format("%sproductID%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getProductID()))));
    }

    return joiner.toString();
  }
}

