/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * StorageListResult
 */
@JsonPropertyOrder({
  StorageListResult.JSON_PROPERTY_TAKE,
  StorageListResult.JSON_PROPERTY_SKIP,
  StorageListResult.JSON_PROPERTY_TOTAL,
  StorageListResult.JSON_PROPERTY_DATA,
  StorageListResult.JSON_PROPERTY_EXPLAIN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class StorageListResult {
  public static final String JSON_PROPERTY_TAKE = "take";
  @javax.annotation.Nullable
  private Integer take;

  public static final String JSON_PROPERTY_SKIP = "skip";
  @javax.annotation.Nullable
  private Integer skip;

  public static final String JSON_PROPERTY_TOTAL = "total";
  @javax.annotation.Nullable
  private Long total;

  public static final String JSON_PROPERTY_DATA = "data";
  private JsonNullable<Object> data = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_EXPLAIN = "explain";
  private JsonNullable<Object> explain = JsonNullable.<Object>of(null);

  public StorageListResult() { 
  }

  public StorageListResult take(@javax.annotation.Nullable Integer take) {
    this.take = take;
    return this;
  }

  /**
   * Get take
   * @return take
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAKE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getTake() {
    return take;
  }


  @JsonProperty(JSON_PROPERTY_TAKE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTake(@javax.annotation.Nullable Integer take) {
    this.take = take;
  }


  public StorageListResult skip(@javax.annotation.Nullable Integer skip) {
    this.skip = skip;
    return this;
  }

  /**
   * Get skip
   * @return skip
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SKIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getSkip() {
    return skip;
  }


  @JsonProperty(JSON_PROPERTY_SKIP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSkip(@javax.annotation.Nullable Integer skip) {
    this.skip = skip;
  }


  public StorageListResult total(@javax.annotation.Nullable Long total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotal(@javax.annotation.Nullable Long total) {
    this.total = total;
  }


  public StorageListResult data(@javax.annotation.Nullable Object data) {
    this.data = JsonNullable.<Object>of(data);
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getData() {
        return data.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getData_JsonNullable() {
    return data;
  }
  
  @JsonProperty(JSON_PROPERTY_DATA)
  public void setData_JsonNullable(JsonNullable<Object> data) {
    this.data = data;
  }

  public void setData(@javax.annotation.Nullable Object data) {
    this.data = JsonNullable.<Object>of(data);
  }


  public StorageListResult explain(@javax.annotation.Nullable Object explain) {
    this.explain = JsonNullable.<Object>of(explain);
    return this;
  }

  /**
   * Get explain
   * @return explain
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Object getExplain() {
        return explain.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPLAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getExplain_JsonNullable() {
    return explain;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPLAIN)
  public void setExplain_JsonNullable(JsonNullable<Object> explain) {
    this.explain = explain;
  }

  public void setExplain(@javax.annotation.Nullable Object explain) {
    this.explain = JsonNullable.<Object>of(explain);
  }


  /**
   * Return true if this StorageListResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StorageListResult storageListResult = (StorageListResult) o;
    return Objects.equals(this.take, storageListResult.take) &&
        Objects.equals(this.skip, storageListResult.skip) &&
        Objects.equals(this.total, storageListResult.total) &&
        equalsNullable(this.data, storageListResult.data) &&
        equalsNullable(this.explain, storageListResult.explain);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(take, skip, total, hashCodeNullable(data), hashCodeNullable(explain));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StorageListResult {\n");
    sb.append("    take: ").append(toIndentedString(take)).append("\n");
    sb.append("    skip: ").append(toIndentedString(skip)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    explain: ").append(toIndentedString(explain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `take` to the URL query string
    if (getTake() != null) {
      joiner.add(String.format("%stake%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTake()))));
    }

    // add `skip` to the URL query string
    if (getSkip() != null) {
      joiner.add(String.format("%sskip%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSkip()))));
    }

    // add `total` to the URL query string
    if (getTotal() != null) {
      joiner.add(String.format("%stotal%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTotal()))));
    }

    // add `data` to the URL query string
    if (getData() != null) {
      joiner.add(String.format("%sdata%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getData()))));
    }

    // add `explain` to the URL query string
    if (getExplain() != null) {
      joiner.add(String.format("%sexplain%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExplain()))));
    }

    return joiner.toString();
  }
}

