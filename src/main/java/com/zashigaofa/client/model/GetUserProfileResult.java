/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zashigaofa.client.model.GeoLocation;
import com.zashigaofa.client.model.User;
import com.zashigaofa.client.model.UserCurrency;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * GetUserProfileResult
 */
@JsonPropertyOrder({
  GetUserProfileResult.JSON_PROPERTY_USER,
  GetUserProfileResult.JSON_PROPERTY_CURRENCIES,
  GetUserProfileResult.JSON_PROPERTY_ROLE,
  GetUserProfileResult.JSON_PROPERTY_LOCATION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class GetUserProfileResult {
  public static final String JSON_PROPERTY_USER = "user";
  @javax.annotation.Nullable
  private User user;

  public static final String JSON_PROPERTY_CURRENCIES = "currencies";
  private JsonNullable<List<UserCurrency>> currencies = JsonNullable.<List<UserCurrency>>undefined();

  public static final String JSON_PROPERTY_ROLE = "role";
  private JsonNullable<String> role = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCATION = "location";
  @javax.annotation.Nullable
  private GeoLocation location;

  public GetUserProfileResult() { 
  }

  public GetUserProfileResult user(@javax.annotation.Nullable User user) {
    this.user = user;
    return this;
  }

  /**
   * Get user
   * @return user
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public User getUser() {
    return user;
  }


  @JsonProperty(JSON_PROPERTY_USER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(@javax.annotation.Nullable User user) {
    this.user = user;
  }


  public GetUserProfileResult currencies(@javax.annotation.Nullable List<UserCurrency> currencies) {
    this.currencies = JsonNullable.<List<UserCurrency>>of(currencies);
    return this;
  }

  public GetUserProfileResult addCurrenciesItem(UserCurrency currenciesItem) {
    if (this.currencies == null || !this.currencies.isPresent()) {
      this.currencies = JsonNullable.<List<UserCurrency>>of(new ArrayList<>());
    }
    try {
      this.currencies.get().add(currenciesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get currencies
   * @return currencies
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<UserCurrency> getCurrencies() {
        return currencies.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserCurrency>> getCurrencies_JsonNullable() {
    return currencies;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCIES)
  public void setCurrencies_JsonNullable(JsonNullable<List<UserCurrency>> currencies) {
    this.currencies = currencies;
  }

  public void setCurrencies(@javax.annotation.Nullable List<UserCurrency> currencies) {
    this.currencies = JsonNullable.<List<UserCurrency>>of(currencies);
  }


  public GetUserProfileResult role(@javax.annotation.Nullable String role) {
    this.role = JsonNullable.<String>of(role);
    return this;
  }

  /**
   * Get role
   * @return role
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getRole() {
        return role.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRole_JsonNullable() {
    return role;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE)
  public void setRole_JsonNullable(JsonNullable<String> role) {
    this.role = role;
  }

  public void setRole(@javax.annotation.Nullable String role) {
    this.role = JsonNullable.<String>of(role);
  }


  public GetUserProfileResult location(@javax.annotation.Nullable GeoLocation location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public GeoLocation getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(@javax.annotation.Nullable GeoLocation location) {
    this.location = location;
  }


  /**
   * Return true if this GetUserProfileResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetUserProfileResult getUserProfileResult = (GetUserProfileResult) o;
    return Objects.equals(this.user, getUserProfileResult.user) &&
        equalsNullable(this.currencies, getUserProfileResult.currencies) &&
        equalsNullable(this.role, getUserProfileResult.role) &&
        Objects.equals(this.location, getUserProfileResult.location);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(user, hashCodeNullable(currencies), hashCodeNullable(role), location);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetUserProfileResult {\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    currencies: ").append(toIndentedString(currencies)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `user` to the URL query string
    if (getUser() != null) {
      joiner.add(getUser().toUrlQueryString(prefix + "user" + suffix));
    }

    // add `currencies` to the URL query string
    if (getCurrencies() != null) {
      for (int i = 0; i < getCurrencies().size(); i++) {
        if (getCurrencies().get(i) != null) {
          joiner.add(getCurrencies().get(i).toUrlQueryString(String.format("%scurrencies%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `role` to the URL query string
    if (getRole() != null) {
      joiner.add(String.format("%srole%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRole()))));
    }

    // add `location` to the URL query string
    if (getLocation() != null) {
      joiner.add(getLocation().toUrlQueryString(prefix + "location" + suffix));
    }

    return joiner.toString();
  }
}

