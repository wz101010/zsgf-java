/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * SignInRequest
 */
@JsonPropertyOrder({
  SignInRequest.JSON_PROPERTY_USER_NAME,
  SignInRequest.JSON_PROPERTY_PWD,
  SignInRequest.JSON_PROPERTY_TWO_FACTOR_CODE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class SignInRequest {
  public static final String JSON_PROPERTY_USER_NAME = "userName";
  @javax.annotation.Nonnull
  private String userName;

  public static final String JSON_PROPERTY_PWD = "pwd";
  @javax.annotation.Nonnull
  private String pwd;

  public static final String JSON_PROPERTY_TWO_FACTOR_CODE = "twoFactorCode";
  private JsonNullable<String> twoFactorCode = JsonNullable.<String>undefined();

  public SignInRequest() { 
  }

  public SignInRequest userName(@javax.annotation.Nonnull String userName) {
    this.userName = userName;
    return this;
  }

  /**
   * 用户名，长度必须在6到32个字符之间，只能包含字母、数字、下划线和连字符
   * @return userName
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getUserName() {
    return userName;
  }


  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserName(@javax.annotation.Nonnull String userName) {
    this.userName = userName;
  }


  public SignInRequest pwd(@javax.annotation.Nonnull String pwd) {
    this.pwd = pwd;
    return this;
  }

  /**
   * 用户密码，长度必须在6到50个字符之间，可以包含数字、大小写字母、下划线、连字符和特殊符号
   * @return pwd
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PWD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPwd() {
    return pwd;
  }


  @JsonProperty(JSON_PROPERTY_PWD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPwd(@javax.annotation.Nonnull String pwd) {
    this.pwd = pwd;
  }


  public SignInRequest twoFactorCode(@javax.annotation.Nullable String twoFactorCode) {
    this.twoFactorCode = JsonNullable.<String>of(twoFactorCode);
    return this;
  }

  /**
   * 双因素认证代码，如果启用双因素认证登录，则必填，长度必须为6个字符，只能包含数字
   * @return twoFactorCode
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTwoFactorCode() {
        return twoFactorCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TWO_FACTOR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTwoFactorCode_JsonNullable() {
    return twoFactorCode;
  }
  
  @JsonProperty(JSON_PROPERTY_TWO_FACTOR_CODE)
  public void setTwoFactorCode_JsonNullable(JsonNullable<String> twoFactorCode) {
    this.twoFactorCode = twoFactorCode;
  }

  public void setTwoFactorCode(@javax.annotation.Nullable String twoFactorCode) {
    this.twoFactorCode = JsonNullable.<String>of(twoFactorCode);
  }


  /**
   * Return true if this SignInRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignInRequest signInRequest = (SignInRequest) o;
    return Objects.equals(this.userName, signInRequest.userName) &&
        Objects.equals(this.pwd, signInRequest.pwd) &&
        equalsNullable(this.twoFactorCode, signInRequest.twoFactorCode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(userName, pwd, hashCodeNullable(twoFactorCode));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignInRequest {\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    pwd: ").append(toIndentedString(pwd)).append("\n");
    sb.append("    twoFactorCode: ").append(toIndentedString(twoFactorCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `userName` to the URL query string
    if (getUserName() != null) {
      joiner.add(String.format("%suserName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUserName()))));
    }

    // add `pwd` to the URL query string
    if (getPwd() != null) {
      joiner.add(String.format("%spwd%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPwd()))));
    }

    // add `twoFactorCode` to the URL query string
    if (getTwoFactorCode() != null) {
      joiner.add(String.format("%stwoFactorCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTwoFactorCode()))));
    }

    return joiner.toString();
  }
}

