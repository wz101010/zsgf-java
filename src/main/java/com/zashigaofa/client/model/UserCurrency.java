/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * 用户资产实体，用于记录用户的货币余额和相关信息。
 */
@JsonPropertyOrder({
  UserCurrency.JSON_PROPERTY_ID,
  UserCurrency.JSON_PROPERTY_USER_I_D,
  UserCurrency.JSON_PROPERTY_CURRENCY_CODE,
  UserCurrency.JSON_PROPERTY_BALANCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class UserCurrency {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private Long id;

  public static final String JSON_PROPERTY_USER_I_D = "userID";
  @javax.annotation.Nullable
  private Long userID;

  public static final String JSON_PROPERTY_CURRENCY_CODE = "currencyCode";
  private JsonNullable<String> currencyCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BALANCE = "balance";
  @javax.annotation.Nullable
  private Long balance;

  public UserCurrency() { 
  }

  public UserCurrency id(@javax.annotation.Nullable Long id) {
    this.id = id;
    return this;
  }

  /**
   * 用户资产的唯一标识符。
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable Long id) {
    this.id = id;
  }


  public UserCurrency userID(@javax.annotation.Nullable Long userID) {
    this.userID = userID;
    return this;
  }

  /**
   * 与用户资产关联的用户ID。
   * @return userID
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getUserID() {
    return userID;
  }


  @JsonProperty(JSON_PROPERTY_USER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserID(@javax.annotation.Nullable Long userID) {
    this.userID = userID;
  }


  public UserCurrency currencyCode(@javax.annotation.Nullable String currencyCode) {
    this.currencyCode = JsonNullable.<String>of(currencyCode);
    return this;
  }

  /**
   * 用户资产的货币代码，例如 &#39;USD&#39;, &#39;CNY&#39; 等。
   * @return currencyCode
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getCurrencyCode() {
        return currencyCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCurrencyCode_JsonNullable() {
    return currencyCode;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENCY_CODE)
  public void setCurrencyCode_JsonNullable(JsonNullable<String> currencyCode) {
    this.currencyCode = currencyCode;
  }

  public void setCurrencyCode(@javax.annotation.Nullable String currencyCode) {
    this.currencyCode = JsonNullable.<String>of(currencyCode);
  }


  public UserCurrency balance(@javax.annotation.Nullable Long balance) {
    this.balance = balance;
    return this;
  }

  /**
   * 用户的账户余额，表示当前持有的货币数量。
   * @return balance
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getBalance() {
    return balance;
  }


  @JsonProperty(JSON_PROPERTY_BALANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBalance(@javax.annotation.Nullable Long balance) {
    this.balance = balance;
  }


  /**
   * Return true if this UserCurrency object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserCurrency userCurrency = (UserCurrency) o;
    return Objects.equals(this.id, userCurrency.id) &&
        Objects.equals(this.userID, userCurrency.userID) &&
        equalsNullable(this.currencyCode, userCurrency.currencyCode) &&
        Objects.equals(this.balance, userCurrency.balance);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userID, hashCodeNullable(currencyCode), balance);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserCurrency {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `userID` to the URL query string
    if (getUserID() != null) {
      joiner.add(String.format("%suserID%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUserID()))));
    }

    // add `currencyCode` to the URL query string
    if (getCurrencyCode() != null) {
      joiner.add(String.format("%scurrencyCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCurrencyCode()))));
    }

    // add `balance` to the URL query string
    if (getBalance() != null) {
      joiner.add(String.format("%sbalance%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getBalance()))));
    }

    return joiner.toString();
  }
}

