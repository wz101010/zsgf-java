/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * 用户令牌实体，用于管理用户的访问令牌及其相关信息。
 */
@JsonPropertyOrder({
  UserAccessToken.JSON_PROPERTY_ID,
  UserAccessToken.JSON_PROPERTY_USER_I_D,
  UserAccessToken.JSON_PROPERTY_ENABLE,
  UserAccessToken.JSON_PROPERTY_PERMISSIONS,
  UserAccessToken.JSON_PROPERTY_TITLE,
  UserAccessToken.JSON_PROPERTY_ACCESS_TOKEN,
  UserAccessToken.JSON_PROPERTY_TAGS,
  UserAccessToken.JSON_PROPERTY_DESCRIPTION,
  UserAccessToken.JSON_PROPERTY_EXPIRE_TIME,
  UserAccessToken.JSON_PROPERTY_CREATE_DATE,
  UserAccessToken.JSON_PROPERTY_LAST_UPDATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class UserAccessToken {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private Long id;

  public static final String JSON_PROPERTY_USER_I_D = "userID";
  @javax.annotation.Nullable
  private Long userID;

  public static final String JSON_PROPERTY_ENABLE = "enable";
  @javax.annotation.Nullable
  private Boolean enable;

  public static final String JSON_PROPERTY_PERMISSIONS = "permissions";
  private JsonNullable<String> permissions = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE = "title";
  private JsonNullable<String> title = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ACCESS_TOKEN = "accessToken";
  private JsonNullable<String> accessToken = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TAGS = "tags";
  private JsonNullable<String> tags = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXPIRE_TIME = "expireTime";
  @javax.annotation.Nullable
  private OffsetDateTime expireTime;

  public static final String JSON_PROPERTY_CREATE_DATE = "createDate";
  @javax.annotation.Nullable
  private OffsetDateTime createDate;

  public static final String JSON_PROPERTY_LAST_UPDATE = "lastUpdate";
  @javax.annotation.Nullable
  private OffsetDateTime lastUpdate;

  public UserAccessToken() { 
  }

  public UserAccessToken id(@javax.annotation.Nullable Long id) {
    this.id = id;
    return this;
  }

  /**
   * 用户令牌的唯一标识符。
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable Long id) {
    this.id = id;
  }


  public UserAccessToken userID(@javax.annotation.Nullable Long userID) {
    this.userID = userID;
    return this;
  }

  /**
   * 与令牌关联的用户ID。
   * @return userID
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getUserID() {
    return userID;
  }


  @JsonProperty(JSON_PROPERTY_USER_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserID(@javax.annotation.Nullable Long userID) {
    this.userID = userID;
  }


  public UserAccessToken enable(@javax.annotation.Nullable Boolean enable) {
    this.enable = enable;
    return this;
  }

  /**
   * 指示令牌是否处于启用状态。
   * @return enable
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnable() {
    return enable;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnable(@javax.annotation.Nullable Boolean enable) {
    this.enable = enable;
  }


  public UserAccessToken permissions(@javax.annotation.Nullable String permissions) {
    this.permissions = JsonNullable.<String>of(permissions);
    return this;
  }

  /**
   * 令牌拥有的权限列表，多个权限以逗号分隔。
   * @return permissions
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPermissions() {
        return permissions.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPermissions_JsonNullable() {
    return permissions;
  }
  
  @JsonProperty(JSON_PROPERTY_PERMISSIONS)
  public void setPermissions_JsonNullable(JsonNullable<String> permissions) {
    this.permissions = permissions;
  }

  public void setPermissions(@javax.annotation.Nullable String permissions) {
    this.permissions = JsonNullable.<String>of(permissions);
  }


  public UserAccessToken title(@javax.annotation.Nullable String title) {
    this.title = JsonNullable.<String>of(title);
    return this;
  }

  /**
   * 令牌的标题或名称，用于标识令牌。
   * @return title
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTitle() {
        return title.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitle_JsonNullable() {
    return title;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE)
  public void setTitle_JsonNullable(JsonNullable<String> title) {
    this.title = title;
  }

  public void setTitle(@javax.annotation.Nullable String title) {
    this.title = JsonNullable.<String>of(title);
  }


  public UserAccessToken accessToken(@javax.annotation.Nullable String accessToken) {
    this.accessToken = JsonNullable.<String>of(accessToken);
    return this;
  }

  /**
   * 访问令牌的具体值，用于身份验证。
   * @return accessToken
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAccessToken() {
        return accessToken.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAccessToken_JsonNullable() {
    return accessToken;
  }
  
  @JsonProperty(JSON_PROPERTY_ACCESS_TOKEN)
  public void setAccessToken_JsonNullable(JsonNullable<String> accessToken) {
    this.accessToken = accessToken;
  }

  public void setAccessToken(@javax.annotation.Nullable String accessToken) {
    this.accessToken = JsonNullable.<String>of(accessToken);
  }


  public UserAccessToken tags(@javax.annotation.Nullable String tags) {
    this.tags = JsonNullable.<String>of(tags);
    return this;
  }

  /**
   * 用于分类或标记令牌的标签。
   * @return tags
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTags() {
        return tags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTags_JsonNullable() {
    return tags;
  }
  
  @JsonProperty(JSON_PROPERTY_TAGS)
  public void setTags_JsonNullable(JsonNullable<String> tags) {
    this.tags = tags;
  }

  public void setTags(@javax.annotation.Nullable String tags) {
    this.tags = JsonNullable.<String>of(tags);
  }


  public UserAccessToken description(@javax.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

  /**
   * 令牌的详细描述信息。
   * @return description
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public UserAccessToken expireTime(@javax.annotation.Nullable OffsetDateTime expireTime) {
    this.expireTime = expireTime;
    return this;
  }

  /**
   * 令牌的过期时间，超过该时间令牌将失效。
   * @return expireTime
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getExpireTime() {
    return expireTime;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpireTime(@javax.annotation.Nullable OffsetDateTime expireTime) {
    this.expireTime = expireTime;
  }


  public UserAccessToken createDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * 令牌的创建日期，默认为当前时间。
   * @return createDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getCreateDate() {
    return createDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
  }


  public UserAccessToken lastUpdate(@javax.annotation.Nullable OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
    return this;
  }

  /**
   * 令牌的最后更新日期，默认为当前时间。
   * @return lastUpdate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdate(@javax.annotation.Nullable OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }


  /**
   * Return true if this UserAccessToken object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserAccessToken userAccessToken = (UserAccessToken) o;
    return Objects.equals(this.id, userAccessToken.id) &&
        Objects.equals(this.userID, userAccessToken.userID) &&
        Objects.equals(this.enable, userAccessToken.enable) &&
        equalsNullable(this.permissions, userAccessToken.permissions) &&
        equalsNullable(this.title, userAccessToken.title) &&
        equalsNullable(this.accessToken, userAccessToken.accessToken) &&
        equalsNullable(this.tags, userAccessToken.tags) &&
        equalsNullable(this.description, userAccessToken.description) &&
        Objects.equals(this.expireTime, userAccessToken.expireTime) &&
        Objects.equals(this.createDate, userAccessToken.createDate) &&
        Objects.equals(this.lastUpdate, userAccessToken.lastUpdate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userID, enable, hashCodeNullable(permissions), hashCodeNullable(title), hashCodeNullable(accessToken), hashCodeNullable(tags), hashCodeNullable(description), expireTime, createDate, lastUpdate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserAccessToken {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `userID` to the URL query string
    if (getUserID() != null) {
      joiner.add(String.format("%suserID%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUserID()))));
    }

    // add `enable` to the URL query string
    if (getEnable() != null) {
      joiner.add(String.format("%senable%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEnable()))));
    }

    // add `permissions` to the URL query string
    if (getPermissions() != null) {
      joiner.add(String.format("%spermissions%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPermissions()))));
    }

    // add `title` to the URL query string
    if (getTitle() != null) {
      joiner.add(String.format("%stitle%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTitle()))));
    }

    // add `accessToken` to the URL query string
    if (getAccessToken() != null) {
      joiner.add(String.format("%saccessToken%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAccessToken()))));
    }

    // add `tags` to the URL query string
    if (getTags() != null) {
      joiner.add(String.format("%stags%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTags()))));
    }

    // add `description` to the URL query string
    if (getDescription() != null) {
      joiner.add(String.format("%sdescription%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getDescription()))));
    }

    // add `expireTime` to the URL query string
    if (getExpireTime() != null) {
      joiner.add(String.format("%sexpireTime%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getExpireTime()))));
    }

    // add `createDate` to the URL query string
    if (getCreateDate() != null) {
      joiner.add(String.format("%screateDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreateDate()))));
    }

    // add `lastUpdate` to the URL query string
    if (getLastUpdate() != null) {
      joiner.add(String.format("%slastUpdate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastUpdate()))));
    }

    return joiner.toString();
  }
}

