/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * MySqlGeometry
 */
@JsonPropertyOrder({
  MySqlGeometry.JSON_PROPERTY_X_COORDINATE,
  MySqlGeometry.JSON_PROPERTY_Y_COORDINATE,
  MySqlGeometry.JSON_PROPERTY_SRID,
  MySqlGeometry.JSON_PROPERTY_IS_NULL,
  MySqlGeometry.JSON_PROPERTY_VALUE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class MySqlGeometry {
  public static final String JSON_PROPERTY_X_COORDINATE = "xCoordinate";
  private JsonNullable<Double> xCoordinate = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_Y_COORDINATE = "yCoordinate";
  private JsonNullable<Double> yCoordinate = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SRID = "srid";
  private JsonNullable<Integer> srid = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_IS_NULL = "isNull";
  @javax.annotation.Nullable
  private Boolean isNull;

  public static final String JSON_PROPERTY_VALUE = "value";
  private JsonNullable<byte[]> value = JsonNullable.<byte[]>undefined();

  public MySqlGeometry() { 
  }

  @JsonCreator
  public MySqlGeometry(
    @JsonProperty(JSON_PROPERTY_X_COORDINATE) Double xCoordinate, 
    @JsonProperty(JSON_PROPERTY_Y_COORDINATE) Double yCoordinate, 
    @JsonProperty(JSON_PROPERTY_SRID) Integer srid, 
    @JsonProperty(JSON_PROPERTY_VALUE) byte[] value
  ) {
  this();
    this.xCoordinate = xCoordinate == null ? JsonNullable.<Double>undefined() : JsonNullable.of(xCoordinate);
    this.yCoordinate = yCoordinate == null ? JsonNullable.<Double>undefined() : JsonNullable.of(yCoordinate);
    this.srid = srid == null ? JsonNullable.<Integer>undefined() : JsonNullable.of(srid);
    this.value = value == null ? JsonNullable.<byte[]>undefined() : JsonNullable.of(value);
  }

  /**
   * Get xCoordinate
   * @return xCoordinate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Double getxCoordinate() {
    
    if (xCoordinate == null) {
      xCoordinate = JsonNullable.<Double>undefined();
    }
    return xCoordinate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_X_COORDINATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getxCoordinate_JsonNullable() {
    return xCoordinate;
  }
  
  @JsonProperty(JSON_PROPERTY_X_COORDINATE)
  private void setxCoordinate_JsonNullable(JsonNullable<Double> xCoordinate) {
    this.xCoordinate = xCoordinate;
  }



  /**
   * Get yCoordinate
   * @return yCoordinate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Double getyCoordinate() {
    
    if (yCoordinate == null) {
      yCoordinate = JsonNullable.<Double>undefined();
    }
    return yCoordinate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_Y_COORDINATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getyCoordinate_JsonNullable() {
    return yCoordinate;
  }
  
  @JsonProperty(JSON_PROPERTY_Y_COORDINATE)
  private void setyCoordinate_JsonNullable(JsonNullable<Double> yCoordinate) {
    this.yCoordinate = yCoordinate;
  }



  /**
   * Get srid
   * @return srid
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getSrid() {
    
    if (srid == null) {
      srid = JsonNullable.<Integer>undefined();
    }
    return srid.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SRID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getSrid_JsonNullable() {
    return srid;
  }
  
  @JsonProperty(JSON_PROPERTY_SRID)
  private void setSrid_JsonNullable(JsonNullable<Integer> srid) {
    this.srid = srid;
  }



  public MySqlGeometry isNull(@javax.annotation.Nullable Boolean isNull) {
    this.isNull = isNull;
    return this;
  }

  /**
   * Get isNull
   * @return isNull
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_NULL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsNull() {
    return isNull;
  }


  @JsonProperty(JSON_PROPERTY_IS_NULL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsNull(@javax.annotation.Nullable Boolean isNull) {
    this.isNull = isNull;
  }


  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public byte[] getValue() {
    
    if (value == null) {
      value = JsonNullable.<byte[]>undefined();
    }
    return value.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<byte[]> getValue_JsonNullable() {
    return value;
  }
  
  @JsonProperty(JSON_PROPERTY_VALUE)
  private void setValue_JsonNullable(JsonNullable<byte[]> value) {
    this.value = value;
  }



  /**
   * Return true if this MySqlGeometry object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MySqlGeometry mySqlGeometry = (MySqlGeometry) o;
    return equalsNullable(this.xCoordinate, mySqlGeometry.xCoordinate) &&
        equalsNullable(this.yCoordinate, mySqlGeometry.yCoordinate) &&
        equalsNullable(this.srid, mySqlGeometry.srid) &&
        Objects.equals(this.isNull, mySqlGeometry.isNull) &&
        equalsNullable(this.value, mySqlGeometry.value);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(xCoordinate), hashCodeNullable(yCoordinate), hashCodeNullable(srid), isNull, hashCodeNullable(value));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MySqlGeometry {\n");
    sb.append("    xCoordinate: ").append(toIndentedString(xCoordinate)).append("\n");
    sb.append("    yCoordinate: ").append(toIndentedString(yCoordinate)).append("\n");
    sb.append("    srid: ").append(toIndentedString(srid)).append("\n");
    sb.append("    isNull: ").append(toIndentedString(isNull)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `xCoordinate` to the URL query string
    if (getxCoordinate() != null) {
      joiner.add(String.format("%sxCoordinate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getxCoordinate()))));
    }

    // add `yCoordinate` to the URL query string
    if (getyCoordinate() != null) {
      joiner.add(String.format("%syCoordinate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getyCoordinate()))));
    }

    // add `srid` to the URL query string
    if (getSrid() != null) {
      joiner.add(String.format("%ssrid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSrid()))));
    }

    // add `isNull` to the URL query string
    if (getIsNull() != null) {
      joiner.add(String.format("%sisNull%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsNull()))));
    }

    // add `value` to the URL query string
    if (getValue() != null) {
      joiner.add(String.format("%svalue%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getValue()))));
    }

    return joiner.toString();
  }
}

