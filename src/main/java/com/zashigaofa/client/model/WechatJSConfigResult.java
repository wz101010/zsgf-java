/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * WechatJSConfigResult
 */
@JsonPropertyOrder({
  WechatJSConfigResult.JSON_PROPERTY_NONCESTR,
  WechatJSConfigResult.JSON_PROPERTY_TIMESTAMP,
  WechatJSConfigResult.JSON_PROPERTY_SIGNATURE,
  WechatJSConfigResult.JSON_PROPERTY_APP_KEY,
  WechatJSConfigResult.JSON_PROPERTY_JS_API_LIST
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class WechatJSConfigResult {
  public static final String JSON_PROPERTY_NONCESTR = "noncestr";
  private JsonNullable<String> noncestr = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
  private JsonNullable<String> timestamp = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SIGNATURE = "signature";
  private JsonNullable<String> signature = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_APP_KEY = "appKey";
  private JsonNullable<String> appKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_JS_API_LIST = "jsApiList";
  private JsonNullable<List<String>> jsApiList = JsonNullable.<List<String>>undefined();

  public WechatJSConfigResult() { 
  }

  public WechatJSConfigResult noncestr(@javax.annotation.Nullable String noncestr) {
    this.noncestr = JsonNullable.<String>of(noncestr);
    return this;
  }

  /**
   * Get noncestr
   * @return noncestr
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getNoncestr() {
        return noncestr.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NONCESTR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNoncestr_JsonNullable() {
    return noncestr;
  }
  
  @JsonProperty(JSON_PROPERTY_NONCESTR)
  public void setNoncestr_JsonNullable(JsonNullable<String> noncestr) {
    this.noncestr = noncestr;
  }

  public void setNoncestr(@javax.annotation.Nullable String noncestr) {
    this.noncestr = JsonNullable.<String>of(noncestr);
  }


  public WechatJSConfigResult timestamp(@javax.annotation.Nullable String timestamp) {
    this.timestamp = JsonNullable.<String>of(timestamp);
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getTimestamp() {
        return timestamp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTimestamp_JsonNullable() {
    return timestamp;
  }
  
  @JsonProperty(JSON_PROPERTY_TIMESTAMP)
  public void setTimestamp_JsonNullable(JsonNullable<String> timestamp) {
    this.timestamp = timestamp;
  }

  public void setTimestamp(@javax.annotation.Nullable String timestamp) {
    this.timestamp = JsonNullable.<String>of(timestamp);
  }


  public WechatJSConfigResult signature(@javax.annotation.Nullable String signature) {
    this.signature = JsonNullable.<String>of(signature);
    return this;
  }

  /**
   * Get signature
   * @return signature
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSignature() {
        return signature.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGNATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSignature_JsonNullable() {
    return signature;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGNATURE)
  public void setSignature_JsonNullable(JsonNullable<String> signature) {
    this.signature = signature;
  }

  public void setSignature(@javax.annotation.Nullable String signature) {
    this.signature = JsonNullable.<String>of(signature);
  }


  public WechatJSConfigResult appKey(@javax.annotation.Nullable String appKey) {
    this.appKey = JsonNullable.<String>of(appKey);
    return this;
  }

  /**
   * Get appKey
   * @return appKey
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAppKey() {
        return appKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APP_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAppKey_JsonNullable() {
    return appKey;
  }
  
  @JsonProperty(JSON_PROPERTY_APP_KEY)
  public void setAppKey_JsonNullable(JsonNullable<String> appKey) {
    this.appKey = appKey;
  }

  public void setAppKey(@javax.annotation.Nullable String appKey) {
    this.appKey = JsonNullable.<String>of(appKey);
  }


  public WechatJSConfigResult jsApiList(@javax.annotation.Nullable List<String> jsApiList) {
    this.jsApiList = JsonNullable.<List<String>>of(jsApiList);
    return this;
  }

  public WechatJSConfigResult addJsApiListItem(String jsApiListItem) {
    if (this.jsApiList == null || !this.jsApiList.isPresent()) {
      this.jsApiList = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.jsApiList.get().add(jsApiListItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get jsApiList
   * @return jsApiList
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<String> getJsApiList() {
        return jsApiList.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_JS_API_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getJsApiList_JsonNullable() {
    return jsApiList;
  }
  
  @JsonProperty(JSON_PROPERTY_JS_API_LIST)
  public void setJsApiList_JsonNullable(JsonNullable<List<String>> jsApiList) {
    this.jsApiList = jsApiList;
  }

  public void setJsApiList(@javax.annotation.Nullable List<String> jsApiList) {
    this.jsApiList = JsonNullable.<List<String>>of(jsApiList);
  }


  /**
   * Return true if this WechatJSConfigResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WechatJSConfigResult wechatJSConfigResult = (WechatJSConfigResult) o;
    return equalsNullable(this.noncestr, wechatJSConfigResult.noncestr) &&
        equalsNullable(this.timestamp, wechatJSConfigResult.timestamp) &&
        equalsNullable(this.signature, wechatJSConfigResult.signature) &&
        equalsNullable(this.appKey, wechatJSConfigResult.appKey) &&
        equalsNullable(this.jsApiList, wechatJSConfigResult.jsApiList);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(noncestr), hashCodeNullable(timestamp), hashCodeNullable(signature), hashCodeNullable(appKey), hashCodeNullable(jsApiList));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WechatJSConfigResult {\n");
    sb.append("    noncestr: ").append(toIndentedString(noncestr)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    appKey: ").append(toIndentedString(appKey)).append("\n");
    sb.append("    jsApiList: ").append(toIndentedString(jsApiList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `noncestr` to the URL query string
    if (getNoncestr() != null) {
      joiner.add(String.format("%snoncestr%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNoncestr()))));
    }

    // add `timestamp` to the URL query string
    if (getTimestamp() != null) {
      joiner.add(String.format("%stimestamp%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getTimestamp()))));
    }

    // add `signature` to the URL query string
    if (getSignature() != null) {
      joiner.add(String.format("%ssignature%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSignature()))));
    }

    // add `appKey` to the URL query string
    if (getAppKey() != null) {
      joiner.add(String.format("%sappKey%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAppKey()))));
    }

    // add `jsApiList` to the URL query string
    if (getJsApiList() != null) {
      for (int i = 0; i < getJsApiList().size(); i++) {
        joiner.add(String.format("%sjsApiList%s%s=%s", prefix, suffix,
            "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
            ApiClient.urlEncode(ApiClient.valueToString(getJsApiList().get(i)))));
      }
    }

    return joiner.toString();
  }
}

