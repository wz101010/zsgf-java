/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zashigaofa.client.model.SubFee;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * ChargeInfo
 */
@JsonPropertyOrder({
  ChargeInfo.JSON_PROPERTY_CHARGE_FEE,
  ChargeInfo.JSON_PROPERTY_CHARGE_TYPE,
  ChargeInfo.JSON_PROPERTY_IS_RATING_ON_SWITCH,
  ChargeInfo.JSON_PROPERTY_IS_RATING_ON_TRADE_RECEIVER,
  ChargeInfo.JSON_PROPERTY_ORIGINAL_CHARGE_FEE,
  ChargeInfo.JSON_PROPERTY_SUB_FEE_DETAIL_LIST,
  ChargeInfo.JSON_PROPERTY_SWITCH_FEE_RATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class ChargeInfo {
  public static final String JSON_PROPERTY_CHARGE_FEE = "chargeFee";
  private JsonNullable<String> chargeFee = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CHARGE_TYPE = "chargeType";
  private JsonNullable<String> chargeType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_RATING_ON_SWITCH = "isRatingOnSwitch";
  private JsonNullable<String> isRatingOnSwitch = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_RATING_ON_TRADE_RECEIVER = "isRatingOnTradeReceiver";
  private JsonNullable<String> isRatingOnTradeReceiver = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ORIGINAL_CHARGE_FEE = "originalChargeFee";
  private JsonNullable<String> originalChargeFee = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUB_FEE_DETAIL_LIST = "subFeeDetailList";
  private JsonNullable<List<SubFee>> subFeeDetailList = JsonNullable.<List<SubFee>>undefined();

  public static final String JSON_PROPERTY_SWITCH_FEE_RATE = "switchFeeRate";
  private JsonNullable<String> switchFeeRate = JsonNullable.<String>undefined();

  public ChargeInfo() { 
  }

  public ChargeInfo chargeFee(@javax.annotation.Nullable String chargeFee) {
    this.chargeFee = JsonNullable.<String>of(chargeFee);
    return this;
  }

  /**
   * Get chargeFee
   * @return chargeFee
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getChargeFee() {
        return chargeFee.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHARGE_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getChargeFee_JsonNullable() {
    return chargeFee;
  }
  
  @JsonProperty(JSON_PROPERTY_CHARGE_FEE)
  public void setChargeFee_JsonNullable(JsonNullable<String> chargeFee) {
    this.chargeFee = chargeFee;
  }

  public void setChargeFee(@javax.annotation.Nullable String chargeFee) {
    this.chargeFee = JsonNullable.<String>of(chargeFee);
  }


  public ChargeInfo chargeType(@javax.annotation.Nullable String chargeType) {
    this.chargeType = JsonNullable.<String>of(chargeType);
    return this;
  }

  /**
   * Get chargeType
   * @return chargeType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getChargeType() {
        return chargeType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHARGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getChargeType_JsonNullable() {
    return chargeType;
  }
  
  @JsonProperty(JSON_PROPERTY_CHARGE_TYPE)
  public void setChargeType_JsonNullable(JsonNullable<String> chargeType) {
    this.chargeType = chargeType;
  }

  public void setChargeType(@javax.annotation.Nullable String chargeType) {
    this.chargeType = JsonNullable.<String>of(chargeType);
  }


  public ChargeInfo isRatingOnSwitch(@javax.annotation.Nullable String isRatingOnSwitch) {
    this.isRatingOnSwitch = JsonNullable.<String>of(isRatingOnSwitch);
    return this;
  }

  /**
   * Get isRatingOnSwitch
   * @return isRatingOnSwitch
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getIsRatingOnSwitch() {
        return isRatingOnSwitch.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_RATING_ON_SWITCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIsRatingOnSwitch_JsonNullable() {
    return isRatingOnSwitch;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_RATING_ON_SWITCH)
  public void setIsRatingOnSwitch_JsonNullable(JsonNullable<String> isRatingOnSwitch) {
    this.isRatingOnSwitch = isRatingOnSwitch;
  }

  public void setIsRatingOnSwitch(@javax.annotation.Nullable String isRatingOnSwitch) {
    this.isRatingOnSwitch = JsonNullable.<String>of(isRatingOnSwitch);
  }


  public ChargeInfo isRatingOnTradeReceiver(@javax.annotation.Nullable String isRatingOnTradeReceiver) {
    this.isRatingOnTradeReceiver = JsonNullable.<String>of(isRatingOnTradeReceiver);
    return this;
  }

  /**
   * Get isRatingOnTradeReceiver
   * @return isRatingOnTradeReceiver
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getIsRatingOnTradeReceiver() {
        return isRatingOnTradeReceiver.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_RATING_ON_TRADE_RECEIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIsRatingOnTradeReceiver_JsonNullable() {
    return isRatingOnTradeReceiver;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_RATING_ON_TRADE_RECEIVER)
  public void setIsRatingOnTradeReceiver_JsonNullable(JsonNullable<String> isRatingOnTradeReceiver) {
    this.isRatingOnTradeReceiver = isRatingOnTradeReceiver;
  }

  public void setIsRatingOnTradeReceiver(@javax.annotation.Nullable String isRatingOnTradeReceiver) {
    this.isRatingOnTradeReceiver = JsonNullable.<String>of(isRatingOnTradeReceiver);
  }


  public ChargeInfo originalChargeFee(@javax.annotation.Nullable String originalChargeFee) {
    this.originalChargeFee = JsonNullable.<String>of(originalChargeFee);
    return this;
  }

  /**
   * Get originalChargeFee
   * @return originalChargeFee
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getOriginalChargeFee() {
        return originalChargeFee.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ORIGINAL_CHARGE_FEE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOriginalChargeFee_JsonNullable() {
    return originalChargeFee;
  }
  
  @JsonProperty(JSON_PROPERTY_ORIGINAL_CHARGE_FEE)
  public void setOriginalChargeFee_JsonNullable(JsonNullable<String> originalChargeFee) {
    this.originalChargeFee = originalChargeFee;
  }

  public void setOriginalChargeFee(@javax.annotation.Nullable String originalChargeFee) {
    this.originalChargeFee = JsonNullable.<String>of(originalChargeFee);
  }


  public ChargeInfo subFeeDetailList(@javax.annotation.Nullable List<SubFee> subFeeDetailList) {
    this.subFeeDetailList = JsonNullable.<List<SubFee>>of(subFeeDetailList);
    return this;
  }

  public ChargeInfo addSubFeeDetailListItem(SubFee subFeeDetailListItem) {
    if (this.subFeeDetailList == null || !this.subFeeDetailList.isPresent()) {
      this.subFeeDetailList = JsonNullable.<List<SubFee>>of(new ArrayList<>());
    }
    try {
      this.subFeeDetailList.get().add(subFeeDetailListItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get subFeeDetailList
   * @return subFeeDetailList
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public List<SubFee> getSubFeeDetailList() {
        return subFeeDetailList.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUB_FEE_DETAIL_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SubFee>> getSubFeeDetailList_JsonNullable() {
    return subFeeDetailList;
  }
  
  @JsonProperty(JSON_PROPERTY_SUB_FEE_DETAIL_LIST)
  public void setSubFeeDetailList_JsonNullable(JsonNullable<List<SubFee>> subFeeDetailList) {
    this.subFeeDetailList = subFeeDetailList;
  }

  public void setSubFeeDetailList(@javax.annotation.Nullable List<SubFee> subFeeDetailList) {
    this.subFeeDetailList = JsonNullable.<List<SubFee>>of(subFeeDetailList);
  }


  public ChargeInfo switchFeeRate(@javax.annotation.Nullable String switchFeeRate) {
    this.switchFeeRate = JsonNullable.<String>of(switchFeeRate);
    return this;
  }

  /**
   * Get switchFeeRate
   * @return switchFeeRate
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getSwitchFeeRate() {
        return switchFeeRate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SWITCH_FEE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSwitchFeeRate_JsonNullable() {
    return switchFeeRate;
  }
  
  @JsonProperty(JSON_PROPERTY_SWITCH_FEE_RATE)
  public void setSwitchFeeRate_JsonNullable(JsonNullable<String> switchFeeRate) {
    this.switchFeeRate = switchFeeRate;
  }

  public void setSwitchFeeRate(@javax.annotation.Nullable String switchFeeRate) {
    this.switchFeeRate = JsonNullable.<String>of(switchFeeRate);
  }


  /**
   * Return true if this ChargeInfo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChargeInfo chargeInfo = (ChargeInfo) o;
    return equalsNullable(this.chargeFee, chargeInfo.chargeFee) &&
        equalsNullable(this.chargeType, chargeInfo.chargeType) &&
        equalsNullable(this.isRatingOnSwitch, chargeInfo.isRatingOnSwitch) &&
        equalsNullable(this.isRatingOnTradeReceiver, chargeInfo.isRatingOnTradeReceiver) &&
        equalsNullable(this.originalChargeFee, chargeInfo.originalChargeFee) &&
        equalsNullable(this.subFeeDetailList, chargeInfo.subFeeDetailList) &&
        equalsNullable(this.switchFeeRate, chargeInfo.switchFeeRate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(chargeFee), hashCodeNullable(chargeType), hashCodeNullable(isRatingOnSwitch), hashCodeNullable(isRatingOnTradeReceiver), hashCodeNullable(originalChargeFee), hashCodeNullable(subFeeDetailList), hashCodeNullable(switchFeeRate));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChargeInfo {\n");
    sb.append("    chargeFee: ").append(toIndentedString(chargeFee)).append("\n");
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    isRatingOnSwitch: ").append(toIndentedString(isRatingOnSwitch)).append("\n");
    sb.append("    isRatingOnTradeReceiver: ").append(toIndentedString(isRatingOnTradeReceiver)).append("\n");
    sb.append("    originalChargeFee: ").append(toIndentedString(originalChargeFee)).append("\n");
    sb.append("    subFeeDetailList: ").append(toIndentedString(subFeeDetailList)).append("\n");
    sb.append("    switchFeeRate: ").append(toIndentedString(switchFeeRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `chargeFee` to the URL query string
    if (getChargeFee() != null) {
      joiner.add(String.format("%schargeFee%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getChargeFee()))));
    }

    // add `chargeType` to the URL query string
    if (getChargeType() != null) {
      joiner.add(String.format("%schargeType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getChargeType()))));
    }

    // add `isRatingOnSwitch` to the URL query string
    if (getIsRatingOnSwitch() != null) {
      joiner.add(String.format("%sisRatingOnSwitch%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsRatingOnSwitch()))));
    }

    // add `isRatingOnTradeReceiver` to the URL query string
    if (getIsRatingOnTradeReceiver() != null) {
      joiner.add(String.format("%sisRatingOnTradeReceiver%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getIsRatingOnTradeReceiver()))));
    }

    // add `originalChargeFee` to the URL query string
    if (getOriginalChargeFee() != null) {
      joiner.add(String.format("%soriginalChargeFee%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getOriginalChargeFee()))));
    }

    // add `subFeeDetailList` to the URL query string
    if (getSubFeeDetailList() != null) {
      for (int i = 0; i < getSubFeeDetailList().size(); i++) {
        if (getSubFeeDetailList().get(i) != null) {
          joiner.add(getSubFeeDetailList().get(i).toUrlQueryString(String.format("%ssubFeeDetailList%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `switchFeeRate` to the URL query string
    if (getSwitchFeeRate() != null) {
      joiner.add(String.format("%sswitchFeeRate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getSwitchFeeRate()))));
    }

    return joiner.toString();
  }
}

