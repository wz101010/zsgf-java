/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * EmailSignUpRequest
 */
@JsonPropertyOrder({
  EmailSignUpRequest.JSON_PROPERTY_EMAIL,
  EmailSignUpRequest.JSON_PROPERTY_PWD,
  EmailSignUpRequest.JSON_PROPERTY_EMAIL_CODE,
  EmailSignUpRequest.JSON_PROPERTY_PHONE,
  EmailSignUpRequest.JSON_PROPERTY_PHONE_CODE,
  EmailSignUpRequest.JSON_PROPERTY_NICK_NAME,
  EmailSignUpRequest.JSON_PROPERTY_AVATAR,
  EmailSignUpRequest.JSON_PROPERTY_DATA
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class EmailSignUpRequest {
  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nonnull
  private String email;

  public static final String JSON_PROPERTY_PWD = "pwd";
  @javax.annotation.Nonnull
  private String pwd;

  public static final String JSON_PROPERTY_EMAIL_CODE = "emailCode";
  private JsonNullable<String> emailCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE = "phone";
  private JsonNullable<String> phone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE_CODE = "phoneCode";
  private JsonNullable<String> phoneCode = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NICK_NAME = "nickName";
  private JsonNullable<String> nickName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AVATAR = "avatar";
  private JsonNullable<String> avatar = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATA = "data";
  private JsonNullable<String> data = JsonNullable.<String>undefined();

  public EmailSignUpRequest() { 
  }

  public EmailSignUpRequest email(@javax.annotation.Nonnull String email) {
    this.email = email;
    return this;
  }

  /**
   * 用户邮箱地址
   * @return email
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@javax.annotation.Nonnull String email) {
    this.email = email;
  }


  public EmailSignUpRequest pwd(@javax.annotation.Nonnull String pwd) {
    this.pwd = pwd;
    return this;
  }

  /**
   * 用户密码，长度为6到32个字符
   * @return pwd
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PWD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPwd() {
    return pwd;
  }


  @JsonProperty(JSON_PROPERTY_PWD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPwd(@javax.annotation.Nonnull String pwd) {
    this.pwd = pwd;
  }


  public EmailSignUpRequest emailCode(@javax.annotation.Nullable String emailCode) {
    this.emailCode = JsonNullable.<String>of(emailCode);
    return this;
  }

  /**
   * 邮箱验证码
   * @return emailCode
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getEmailCode() {
        return emailCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailCode_JsonNullable() {
    return emailCode;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_CODE)
  public void setEmailCode_JsonNullable(JsonNullable<String> emailCode) {
    this.emailCode = emailCode;
  }

  public void setEmailCode(@javax.annotation.Nullable String emailCode) {
    this.emailCode = JsonNullable.<String>of(emailCode);
  }


  public EmailSignUpRequest phone(@javax.annotation.Nullable String phone) {
    this.phone = JsonNullable.<String>of(phone);
    return this;
  }

  /**
   * 手机号，必须为11位数字
   * @return phone
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPhone() {
        return phone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhone_JsonNullable() {
    return phone;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE)
  public void setPhone_JsonNullable(JsonNullable<String> phone) {
    this.phone = phone;
  }

  public void setPhone(@javax.annotation.Nullable String phone) {
    this.phone = JsonNullable.<String>of(phone);
  }


  public EmailSignUpRequest phoneCode(@javax.annotation.Nullable String phoneCode) {
    this.phoneCode = JsonNullable.<String>of(phoneCode);
    return this;
  }

  /**
   * 手机验证码（只有启用的手机验证码功能时，才需要传入）
   * @return phoneCode
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPhoneCode() {
        return phoneCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhoneCode_JsonNullable() {
    return phoneCode;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE_CODE)
  public void setPhoneCode_JsonNullable(JsonNullable<String> phoneCode) {
    this.phoneCode = phoneCode;
  }

  public void setPhoneCode(@javax.annotation.Nullable String phoneCode) {
    this.phoneCode = JsonNullable.<String>of(phoneCode);
  }


  public EmailSignUpRequest nickName(@javax.annotation.Nullable String nickName) {
    this.nickName = JsonNullable.<String>of(nickName);
    return this;
  }

  /**
   * 用户昵称
   * @return nickName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getNickName() {
        return nickName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NICK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNickName_JsonNullable() {
    return nickName;
  }
  
  @JsonProperty(JSON_PROPERTY_NICK_NAME)
  public void setNickName_JsonNullable(JsonNullable<String> nickName) {
    this.nickName = nickName;
  }

  public void setNickName(@javax.annotation.Nullable String nickName) {
    this.nickName = JsonNullable.<String>of(nickName);
  }


  public EmailSignUpRequest avatar(@javax.annotation.Nullable String avatar) {
    this.avatar = JsonNullable.<String>of(avatar);
    return this;
  }

  /**
   * 用户头像URL
   * @return avatar
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAvatar() {
        return avatar.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AVATAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAvatar_JsonNullable() {
    return avatar;
  }
  
  @JsonProperty(JSON_PROPERTY_AVATAR)
  public void setAvatar_JsonNullable(JsonNullable<String> avatar) {
    this.avatar = avatar;
  }

  public void setAvatar(@javax.annotation.Nullable String avatar) {
    this.avatar = JsonNullable.<String>of(avatar);
  }


  public EmailSignUpRequest data(@javax.annotation.Nullable String data) {
    this.data = JsonNullable.<String>of(data);
    return this;
  }

  /**
   * 自定义数据
   * @return data
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getData() {
        return data.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getData_JsonNullable() {
    return data;
  }
  
  @JsonProperty(JSON_PROPERTY_DATA)
  public void setData_JsonNullable(JsonNullable<String> data) {
    this.data = data;
  }

  public void setData(@javax.annotation.Nullable String data) {
    this.data = JsonNullable.<String>of(data);
  }


  /**
   * Return true if this EmailSignUpRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailSignUpRequest emailSignUpRequest = (EmailSignUpRequest) o;
    return Objects.equals(this.email, emailSignUpRequest.email) &&
        Objects.equals(this.pwd, emailSignUpRequest.pwd) &&
        equalsNullable(this.emailCode, emailSignUpRequest.emailCode) &&
        equalsNullable(this.phone, emailSignUpRequest.phone) &&
        equalsNullable(this.phoneCode, emailSignUpRequest.phoneCode) &&
        equalsNullable(this.nickName, emailSignUpRequest.nickName) &&
        equalsNullable(this.avatar, emailSignUpRequest.avatar) &&
        equalsNullable(this.data, emailSignUpRequest.data);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, pwd, hashCodeNullable(emailCode), hashCodeNullable(phone), hashCodeNullable(phoneCode), hashCodeNullable(nickName), hashCodeNullable(avatar), hashCodeNullable(data));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailSignUpRequest {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    pwd: ").append(toIndentedString(pwd)).append("\n");
    sb.append("    emailCode: ").append(toIndentedString(emailCode)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    phoneCode: ").append(toIndentedString(phoneCode)).append("\n");
    sb.append("    nickName: ").append(toIndentedString(nickName)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `email` to the URL query string
    if (getEmail() != null) {
      joiner.add(String.format("%semail%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEmail()))));
    }

    // add `pwd` to the URL query string
    if (getPwd() != null) {
      joiner.add(String.format("%spwd%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPwd()))));
    }

    // add `emailCode` to the URL query string
    if (getEmailCode() != null) {
      joiner.add(String.format("%semailCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEmailCode()))));
    }

    // add `phone` to the URL query string
    if (getPhone() != null) {
      joiner.add(String.format("%sphone%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPhone()))));
    }

    // add `phoneCode` to the URL query string
    if (getPhoneCode() != null) {
      joiner.add(String.format("%sphoneCode%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPhoneCode()))));
    }

    // add `nickName` to the URL query string
    if (getNickName() != null) {
      joiner.add(String.format("%snickName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNickName()))));
    }

    // add `avatar` to the URL query string
    if (getAvatar() != null) {
      joiner.add(String.format("%savatar%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAvatar()))));
    }

    // add `data` to the URL query string
    if (getData() != null) {
      joiner.add(String.format("%sdata%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getData()))));
    }

    return joiner.toString();
  }
}

