/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * AppUserConsentModel
 */
@JsonPropertyOrder({
  AppUserConsentModel.JSON_PROPERTY_ID,
  AppUserConsentModel.JSON_PROPERTY_CREATE_DATE,
  AppUserConsentModel.JSON_PROPERTY_LAST_UPDATE,
  AppUserConsentModel.JSON_PROPERTY_GRANT_TYPE,
  AppUserConsentModel.JSON_PROPERTY_REDIRECT_URI,
  AppUserConsentModel.JSON_PROPERTY_REMARK,
  AppUserConsentModel.JSON_PROPERTY_SCOPES
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class AppUserConsentModel {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private Long id;

  public static final String JSON_PROPERTY_CREATE_DATE = "createDate";
  @javax.annotation.Nullable
  private OffsetDateTime createDate;

  public static final String JSON_PROPERTY_LAST_UPDATE = "lastUpdate";
  @javax.annotation.Nullable
  private OffsetDateTime lastUpdate;

  public static final String JSON_PROPERTY_GRANT_TYPE = "grantType";
  private JsonNullable<String> grantType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REDIRECT_URI = "redirectUri";
  private JsonNullable<String> redirectUri = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_REMARK = "remark";
  private JsonNullable<String> remark = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SCOPES = "scopes";
  private JsonNullable<String> scopes = JsonNullable.<String>undefined();

  public AppUserConsentModel() { 
  }

  public AppUserConsentModel id(@javax.annotation.Nullable Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable Long id) {
    this.id = id;
  }


  public AppUserConsentModel createDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * Get createDate
   * @return createDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getCreateDate() {
    return createDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
  }


  public AppUserConsentModel lastUpdate(@javax.annotation.Nullable OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
    return this;
  }

  /**
   * Get lastUpdate
   * @return lastUpdate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdate(@javax.annotation.Nullable OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }


  public AppUserConsentModel grantType(@javax.annotation.Nullable String grantType) {
    this.grantType = JsonNullable.<String>of(grantType);
    return this;
  }

  /**
   * Get grantType
   * @return grantType
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getGrantType() {
        return grantType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GRANT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGrantType_JsonNullable() {
    return grantType;
  }
  
  @JsonProperty(JSON_PROPERTY_GRANT_TYPE)
  public void setGrantType_JsonNullable(JsonNullable<String> grantType) {
    this.grantType = grantType;
  }

  public void setGrantType(@javax.annotation.Nullable String grantType) {
    this.grantType = JsonNullable.<String>of(grantType);
  }


  public AppUserConsentModel redirectUri(@javax.annotation.Nullable String redirectUri) {
    this.redirectUri = JsonNullable.<String>of(redirectUri);
    return this;
  }

  /**
   * Get redirectUri
   * @return redirectUri
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getRedirectUri() {
        return redirectUri.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRedirectUri_JsonNullable() {
    return redirectUri;
  }
  
  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  public void setRedirectUri_JsonNullable(JsonNullable<String> redirectUri) {
    this.redirectUri = redirectUri;
  }

  public void setRedirectUri(@javax.annotation.Nullable String redirectUri) {
    this.redirectUri = JsonNullable.<String>of(redirectUri);
  }


  public AppUserConsentModel remark(@javax.annotation.Nullable String remark) {
    this.remark = JsonNullable.<String>of(remark);
    return this;
  }

  /**
   * Get remark
   * @return remark
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getRemark() {
        return remark.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMARK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRemark_JsonNullable() {
    return remark;
  }
  
  @JsonProperty(JSON_PROPERTY_REMARK)
  public void setRemark_JsonNullable(JsonNullable<String> remark) {
    this.remark = remark;
  }

  public void setRemark(@javax.annotation.Nullable String remark) {
    this.remark = JsonNullable.<String>of(remark);
  }


  public AppUserConsentModel scopes(@javax.annotation.Nullable String scopes) {
    this.scopes = JsonNullable.<String>of(scopes);
    return this;
  }

  /**
   * Get scopes
   * @return scopes
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getScopes() {
        return scopes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getScopes_JsonNullable() {
    return scopes;
  }
  
  @JsonProperty(JSON_PROPERTY_SCOPES)
  public void setScopes_JsonNullable(JsonNullable<String> scopes) {
    this.scopes = scopes;
  }

  public void setScopes(@javax.annotation.Nullable String scopes) {
    this.scopes = JsonNullable.<String>of(scopes);
  }


  /**
   * Return true if this AppUserConsentModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppUserConsentModel appUserConsentModel = (AppUserConsentModel) o;
    return Objects.equals(this.id, appUserConsentModel.id) &&
        Objects.equals(this.createDate, appUserConsentModel.createDate) &&
        Objects.equals(this.lastUpdate, appUserConsentModel.lastUpdate) &&
        equalsNullable(this.grantType, appUserConsentModel.grantType) &&
        equalsNullable(this.redirectUri, appUserConsentModel.redirectUri) &&
        equalsNullable(this.remark, appUserConsentModel.remark) &&
        equalsNullable(this.scopes, appUserConsentModel.scopes);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createDate, lastUpdate, hashCodeNullable(grantType), hashCodeNullable(redirectUri), hashCodeNullable(remark), hashCodeNullable(scopes));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppUserConsentModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    grantType: ").append(toIndentedString(grantType)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `createDate` to the URL query string
    if (getCreateDate() != null) {
      joiner.add(String.format("%screateDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreateDate()))));
    }

    // add `lastUpdate` to the URL query string
    if (getLastUpdate() != null) {
      joiner.add(String.format("%slastUpdate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastUpdate()))));
    }

    // add `grantType` to the URL query string
    if (getGrantType() != null) {
      joiner.add(String.format("%sgrantType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getGrantType()))));
    }

    // add `redirectUri` to the URL query string
    if (getRedirectUri() != null) {
      joiner.add(String.format("%sredirectUri%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRedirectUri()))));
    }

    // add `remark` to the URL query string
    if (getRemark() != null) {
      joiner.add(String.format("%sremark%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRemark()))));
    }

    // add `scopes` to the URL query string
    if (getScopes() != null) {
      joiner.add(String.format("%sscopes%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getScopes()))));
    }

    return joiner.toString();
  }
}

