/*
 * 用户全部 API 文档
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zashigaofa.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.zashigaofa.client.ApiClient;
/**
 * ProfileResult
 */
@JsonPropertyOrder({
  ProfileResult.JSON_PROPERTY_ID,
  ProfileResult.JSON_PROPERTY_UNION_I_D,
  ProfileResult.JSON_PROPERTY_PHONE,
  ProfileResult.JSON_PROPERTY_CREATE_DATE,
  ProfileResult.JSON_PROPERTY_USER_NAME,
  ProfileResult.JSON_PROPERTY_PHONE_IS_VALID,
  ProfileResult.JSON_PROPERTY_DATA,
  ProfileResult.JSON_PROPERTY_EMAIL,
  ProfileResult.JSON_PROPERTY_EMAIL_IS_VALID,
  ProfileResult.JSON_PROPERTY_LAST_UPDATE,
  ProfileResult.JSON_PROPERTY_NICK_NAME,
  ProfileResult.JSON_PROPERTY_AVATAR,
  ProfileResult.JSON_PROPERTY_ROLE,
  ProfileResult.JSON_PROPERTY_PERMISSION
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T07:36:52.198638406Z[Etc/UTC]", comments = "Generator version: 7.13.0-SNAPSHOT")
public class ProfileResult {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private Long id;

  public static final String JSON_PROPERTY_UNION_I_D = "unionID";
  private JsonNullable<String> unionID = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE = "phone";
  private JsonNullable<String> phone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATE_DATE = "createDate";
  @javax.annotation.Nullable
  private OffsetDateTime createDate;

  public static final String JSON_PROPERTY_USER_NAME = "userName";
  private JsonNullable<String> userName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHONE_IS_VALID = "phoneIsValid";
  @javax.annotation.Nullable
  private Boolean phoneIsValid;

  public static final String JSON_PROPERTY_DATA = "data";
  private JsonNullable<String> data = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL = "email";
  private JsonNullable<String> email = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_IS_VALID = "emailIsValid";
  @javax.annotation.Nullable
  private Boolean emailIsValid;

  public static final String JSON_PROPERTY_LAST_UPDATE = "lastUpdate";
  @javax.annotation.Nullable
  private OffsetDateTime lastUpdate;

  public static final String JSON_PROPERTY_NICK_NAME = "nickName";
  private JsonNullable<String> nickName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AVATAR = "avatar";
  private JsonNullable<String> avatar = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROLE = "role";
  private JsonNullable<String> role = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERMISSION = "permission";
  private JsonNullable<String> permission = JsonNullable.<String>undefined();

  public ProfileResult() { 
  }

  public ProfileResult id(@javax.annotation.Nullable Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable Long id) {
    this.id = id;
  }


  public ProfileResult unionID(@javax.annotation.Nullable String unionID) {
    this.unionID = JsonNullable.<String>of(unionID);
    return this;
  }

  /**
   * Get unionID
   * @return unionID
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getUnionID() {
        return unionID.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNION_I_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUnionID_JsonNullable() {
    return unionID;
  }
  
  @JsonProperty(JSON_PROPERTY_UNION_I_D)
  public void setUnionID_JsonNullable(JsonNullable<String> unionID) {
    this.unionID = unionID;
  }

  public void setUnionID(@javax.annotation.Nullable String unionID) {
    this.unionID = JsonNullable.<String>of(unionID);
  }


  public ProfileResult phone(@javax.annotation.Nullable String phone) {
    this.phone = JsonNullable.<String>of(phone);
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPhone() {
        return phone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPhone_JsonNullable() {
    return phone;
  }
  
  @JsonProperty(JSON_PROPERTY_PHONE)
  public void setPhone_JsonNullable(JsonNullable<String> phone) {
    this.phone = phone;
  }

  public void setPhone(@javax.annotation.Nullable String phone) {
    this.phone = JsonNullable.<String>of(phone);
  }


  public ProfileResult createDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * Get createDate
   * @return createDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getCreateDate() {
    return createDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateDate(@javax.annotation.Nullable OffsetDateTime createDate) {
    this.createDate = createDate;
  }


  public ProfileResult userName(@javax.annotation.Nullable String userName) {
    this.userName = JsonNullable.<String>of(userName);
    return this;
  }

  /**
   * Get userName
   * @return userName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getUserName() {
        return userName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUserName_JsonNullable() {
    return userName;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  public void setUserName_JsonNullable(JsonNullable<String> userName) {
    this.userName = userName;
  }

  public void setUserName(@javax.annotation.Nullable String userName) {
    this.userName = JsonNullable.<String>of(userName);
  }


  public ProfileResult phoneIsValid(@javax.annotation.Nullable Boolean phoneIsValid) {
    this.phoneIsValid = phoneIsValid;
    return this;
  }

  /**
   * Get phoneIsValid
   * @return phoneIsValid
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_IS_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getPhoneIsValid() {
    return phoneIsValid;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_IS_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneIsValid(@javax.annotation.Nullable Boolean phoneIsValid) {
    this.phoneIsValid = phoneIsValid;
  }


  public ProfileResult data(@javax.annotation.Nullable String data) {
    this.data = JsonNullable.<String>of(data);
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getData() {
        return data.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getData_JsonNullable() {
    return data;
  }
  
  @JsonProperty(JSON_PROPERTY_DATA)
  public void setData_JsonNullable(JsonNullable<String> data) {
    this.data = data;
  }

  public void setData(@javax.annotation.Nullable String data) {
    this.data = JsonNullable.<String>of(data);
  }


  public ProfileResult email(@javax.annotation.Nullable String email) {
    this.email = JsonNullable.<String>of(email);
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getEmail() {
        return email.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmail_JsonNullable() {
    return email;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL)
  public void setEmail_JsonNullable(JsonNullable<String> email) {
    this.email = email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = JsonNullable.<String>of(email);
  }


  public ProfileResult emailIsValid(@javax.annotation.Nullable Boolean emailIsValid) {
    this.emailIsValid = emailIsValid;
    return this;
  }

  /**
   * Get emailIsValid
   * @return emailIsValid
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL_IS_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEmailIsValid() {
    return emailIsValid;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_IS_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailIsValid(@javax.annotation.Nullable Boolean emailIsValid) {
    this.emailIsValid = emailIsValid;
  }


  public ProfileResult lastUpdate(@javax.annotation.Nullable OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
    return this;
  }

  /**
   * Get lastUpdate
   * @return lastUpdate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_UPDATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdate(@javax.annotation.Nullable OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }


  public ProfileResult nickName(@javax.annotation.Nullable String nickName) {
    this.nickName = JsonNullable.<String>of(nickName);
    return this;
  }

  /**
   * Get nickName
   * @return nickName
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getNickName() {
        return nickName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NICK_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNickName_JsonNullable() {
    return nickName;
  }
  
  @JsonProperty(JSON_PROPERTY_NICK_NAME)
  public void setNickName_JsonNullable(JsonNullable<String> nickName) {
    this.nickName = nickName;
  }

  public void setNickName(@javax.annotation.Nullable String nickName) {
    this.nickName = JsonNullable.<String>of(nickName);
  }


  public ProfileResult avatar(@javax.annotation.Nullable String avatar) {
    this.avatar = JsonNullable.<String>of(avatar);
    return this;
  }

  /**
   * Get avatar
   * @return avatar
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getAvatar() {
        return avatar.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AVATAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAvatar_JsonNullable() {
    return avatar;
  }
  
  @JsonProperty(JSON_PROPERTY_AVATAR)
  public void setAvatar_JsonNullable(JsonNullable<String> avatar) {
    this.avatar = avatar;
  }

  public void setAvatar(@javax.annotation.Nullable String avatar) {
    this.avatar = JsonNullable.<String>of(avatar);
  }


  public ProfileResult role(@javax.annotation.Nullable String role) {
    this.role = JsonNullable.<String>of(role);
    return this;
  }

  /**
   * Get role
   * @return role
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getRole() {
        return role.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRole_JsonNullable() {
    return role;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE)
  public void setRole_JsonNullable(JsonNullable<String> role) {
    this.role = role;
  }

  public void setRole(@javax.annotation.Nullable String role) {
    this.role = JsonNullable.<String>of(role);
  }


  public ProfileResult permission(@javax.annotation.Nullable String permission) {
    this.permission = JsonNullable.<String>of(permission);
    return this;
  }

  /**
   * Get permission
   * @return permission
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public String getPermission() {
        return permission.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERMISSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPermission_JsonNullable() {
    return permission;
  }
  
  @JsonProperty(JSON_PROPERTY_PERMISSION)
  public void setPermission_JsonNullable(JsonNullable<String> permission) {
    this.permission = permission;
  }

  public void setPermission(@javax.annotation.Nullable String permission) {
    this.permission = JsonNullable.<String>of(permission);
  }


  /**
   * Return true if this ProfileResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileResult profileResult = (ProfileResult) o;
    return Objects.equals(this.id, profileResult.id) &&
        equalsNullable(this.unionID, profileResult.unionID) &&
        equalsNullable(this.phone, profileResult.phone) &&
        Objects.equals(this.createDate, profileResult.createDate) &&
        equalsNullable(this.userName, profileResult.userName) &&
        Objects.equals(this.phoneIsValid, profileResult.phoneIsValid) &&
        equalsNullable(this.data, profileResult.data) &&
        equalsNullable(this.email, profileResult.email) &&
        Objects.equals(this.emailIsValid, profileResult.emailIsValid) &&
        Objects.equals(this.lastUpdate, profileResult.lastUpdate) &&
        equalsNullable(this.nickName, profileResult.nickName) &&
        equalsNullable(this.avatar, profileResult.avatar) &&
        equalsNullable(this.role, profileResult.role) &&
        equalsNullable(this.permission, profileResult.permission);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, hashCodeNullable(unionID), hashCodeNullable(phone), createDate, hashCodeNullable(userName), phoneIsValid, hashCodeNullable(data), hashCodeNullable(email), emailIsValid, lastUpdate, hashCodeNullable(nickName), hashCodeNullable(avatar), hashCodeNullable(role), hashCodeNullable(permission));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    unionID: ").append(toIndentedString(unionID)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    phoneIsValid: ").append(toIndentedString(phoneIsValid)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailIsValid: ").append(toIndentedString(emailIsValid)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    nickName: ").append(toIndentedString(nickName)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    permission: ").append(toIndentedString(permission)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getId()))));
    }

    // add `unionID` to the URL query string
    if (getUnionID() != null) {
      joiner.add(String.format("%sunionID%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUnionID()))));
    }

    // add `phone` to the URL query string
    if (getPhone() != null) {
      joiner.add(String.format("%sphone%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPhone()))));
    }

    // add `createDate` to the URL query string
    if (getCreateDate() != null) {
      joiner.add(String.format("%screateDate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getCreateDate()))));
    }

    // add `userName` to the URL query string
    if (getUserName() != null) {
      joiner.add(String.format("%suserName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUserName()))));
    }

    // add `phoneIsValid` to the URL query string
    if (getPhoneIsValid() != null) {
      joiner.add(String.format("%sphoneIsValid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPhoneIsValid()))));
    }

    // add `data` to the URL query string
    if (getData() != null) {
      joiner.add(String.format("%sdata%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getData()))));
    }

    // add `email` to the URL query string
    if (getEmail() != null) {
      joiner.add(String.format("%semail%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEmail()))));
    }

    // add `emailIsValid` to the URL query string
    if (getEmailIsValid() != null) {
      joiner.add(String.format("%semailIsValid%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getEmailIsValid()))));
    }

    // add `lastUpdate` to the URL query string
    if (getLastUpdate() != null) {
      joiner.add(String.format("%slastUpdate%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getLastUpdate()))));
    }

    // add `nickName` to the URL query string
    if (getNickName() != null) {
      joiner.add(String.format("%snickName%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getNickName()))));
    }

    // add `avatar` to the URL query string
    if (getAvatar() != null) {
      joiner.add(String.format("%savatar%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getAvatar()))));
    }

    // add `role` to the URL query string
    if (getRole() != null) {
      joiner.add(String.format("%srole%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRole()))));
    }

    // add `permission` to the URL query string
    if (getPermission() != null) {
      joiner.add(String.format("%spermission%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getPermission()))));
    }

    return joiner.toString();
  }
}

